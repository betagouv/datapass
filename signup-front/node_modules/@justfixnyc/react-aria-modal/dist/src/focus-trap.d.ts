declare type OptionalNodeThingy = Element | string | (() => Element);
export declare type FocusTrapOptions = {
    returnFocusOnDeactivate: boolean;
    escapeDeactivates: boolean;
    preventScroll?: boolean;
    clickOutsideDeactivates?: boolean;
    allowOutsideClick?: (event: MouseEvent | TouchEvent) => boolean;
    onActivate?: () => void;
    onDeactivate?: () => void;
    initialFocus?: OptionalNodeThingy;
    fallbackFocus?: OptionalNodeThingy;
    setReturnFocus?: OptionalNodeThingy;
};
declare type ActivateOptions = {
    onActivate?: () => void;
};
declare type DeactivateOptions = {
    onDeactivate?: () => void;
    returnFocus?: boolean;
};
export interface FocusTrap {
    activate: (options?: ActivateOptions) => void;
    deactivate: (options?: DeactivateOptions) => void;
    pause: () => void;
    unpause: () => void;
}
export declare function createFocusTrap(element: HTMLElement | string, userOptions: Partial<FocusTrapOptions>): FocusTrap;
export {};
