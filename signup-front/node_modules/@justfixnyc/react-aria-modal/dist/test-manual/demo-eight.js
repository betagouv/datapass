import React from "react";
import ReactDOM from "react-dom";
import { ReactFocusTrap as FocusTrap } from "../src/focus-trap-react";
import AriaModal from "../src/react-aria-modal";
class DemoEight extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            modalActive: false,
            innerFocusTrapActive: false,
        };
        this.activateModal = this.activateModal.bind(this);
        this.deactivateModal = this.deactivateModal.bind(this);
        this.getApplicationNode = this.getApplicationNode.bind(this);
        this.activateInnerFocusTrap = this.activateInnerFocusTrap.bind(this);
        this.deactivateInnerFocusTrap = this.deactivateInnerFocusTrap.bind(this);
    }
    activateModal() {
        this.setState({ modalActive: true });
    }
    deactivateModal() {
        this.setState({
            modalActive: false,
            innerFocusTrapActive: false,
        });
    }
    activateInnerFocusTrap() {
        this.setState({ innerFocusTrapActive: true });
    }
    deactivateInnerFocusTrap() {
        this.setState({ innerFocusTrapActive: false });
    }
    getApplicationNode() {
        const el = document.getElementById("application");
        if (!el)
            throw new Error("assertion failure");
        return el;
    }
    render() {
        const focusTrapTrigger = this.state.innerFocusTrapActive ? (React.createElement("button", { id: "demo-eight-inner-trap-trigger", onClick: this.deactivateInnerFocusTrap }, "deactivate")) : (React.createElement("button", { id: "demo-eight-inner-trap-trigger", onClick: this.activateInnerFocusTrap }, "activate"));
        const innerFocusTrap = !this.state.innerFocusTrapActive ? null : (React.createElement(FocusTrap, { focusTrapOptions: { onDeactivate: this.deactivateInnerFocusTrap } },
            React.createElement("div", { style: {
                    background: "#eee",
                    border: "1px solid gray",
                    marginTop: 10,
                    padding: 20,
                } },
                React.createElement("button", null, "horses"),
                React.createElement("button", { style: { marginLeft: 20 }, onClick: this.deactivateInnerFocusTrap }, "exit"))));
        const modal = this.state.modalActive ? (React.createElement(AriaModal, { titleText: "demo one", onExit: this.deactivateModal, initialFocus: "#demo-eight-inner-trap-trigger", getApplicationNode: this.getApplicationNode, underlayStyle: { paddingTop: "2em" }, escapeExits: !this.state.innerFocusTrapActive },
            React.createElement("div", { id: "demo-eight-modal", className: "modal" },
                React.createElement("div", { className: "modal-body" },
                    React.createElement("p", null,
                        "Here is a modal ",
                        React.createElement("a", { href: "#" }, "with"),
                        " ",
                        React.createElement("a", { href: "#" }, "some"),
                        " ",
                        React.createElement("a", { href: "#" }, "focusable"),
                        " parts."),
                    React.createElement("div", { style: { marginTop: 20 } }, "And here is an internal focus trap:"),
                    focusTrapTrigger,
                    innerFocusTrap),
                React.createElement("footer", { className: "modal-footer" },
                    React.createElement("button", { id: "demo-eight-deactivate", onClick: this.deactivateModal }, "deactivate modal"))))) : (false);
        return (React.createElement("div", null,
            React.createElement("button", { onClick: this.activateModal }, "activate modal"),
            modal));
    }
}
ReactDOM.render(React.createElement(DemoEight, null), document.getElementById("demo-eight"));
//# sourceMappingURL=demo-eight.js.map