/*!
 * DSFR v1.2.1 | SPDX-License-Identifier: MIT | License-Filename: LICENSE.md | restricted use (see terms and conditions)
 */
@charset "UTF-8";

/* ------------------------------------ *\
  TOGGLE
\* ------------------------------------ */
.fr-toggle {
  display: flex;
  flex-wrap: wrap;
  position: relative;
  padding: 1rem 0;

  --text-spacing: 0;
  --title-spacing: 0;

  /*
   * On utilise un input de type checkbox pour gérer le toggle
   * On reset ses styles afin de ne garder que son fonctionnement et son espacement
   * On l'utilisera égalemement pour afficher l'état du toggle (optionnel)
   */
  /*
    * Ajout d'un séparateur
    */
  /*
    * Ajout d'un séparateur
    */
}

.fr-toggle input[type="checkbox"] {
  flex-shrink: 0;
  width: 2.5rem;
  height: 1.5rem;
  border-radius: 0.75rem;
  margin: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;

  /*
     * On applique des styles aux pseudo-elements du label quand l'input est check.
     * On change l'ordre du texte d'état du label dans le content pour afficher
     * la valeur correspondant à l'état checked (optionnel).
     */
  box-shadow: inset 0 0 0 1px var(--border-action-high-blue-france);
}

.fr-toggle input[type="checkbox"]:checked ~ .fr-toggle__label[data-fr-unchecked-label][data-fr-checked-label]::before {
  content: attr(data-fr-checked-label) "\a" attr(data-fr-unchecked-label);
}

.fr-toggle input[type="checkbox"]:checked ~ .fr-toggle__label::after {
  transform: translateX(1rem);
  text-indent: 0;
  z-index: 2000;
}

.fr-toggle label {
  display: inline-flex;
  flex-basis: calc(100% - 2.5rem);
  min-height: 1.5rem;
  padding-left: 2rem;
  font-size: 1rem;
  line-height: 1.5rem;

  /*
     * Si les data attributes sont présents, on assigne un content au pseudo element before,
     * et on enlève le padding left du label.
     */

  /*
     * On prévoit un pseudo-élément pour afficher l'état du bouton( optionnel)
     * On récupère le text via l'attribut [data-fr-unchecked-label]
     */

  /*
     * On inclut l'icône check dans un pseudo-element after
     * On la cache via un text-indent quand l'input n'est pas check
     */
}

.fr-toggle label[data-fr-unchecked-label][data-fr-checked-label] {
  padding-left: 0;
}

.fr-toggle label[data-fr-unchecked-label][data-fr-checked-label]::before {
  content: attr(data-fr-unchecked-label) "\a" attr(data-fr-checked-label);
}

.fr-toggle label[data-fr-unchecked-label][data-fr-checked-label] + .fr-hint-text {
  margin-top: 0.5rem;
}

.fr-toggle label::before {
  flex-shrink: 0;
  min-width: 2.5rem;
  height: calc(1.25rem + 1px);
  margin-top: 1.5rem;
  margin-left: -2.5rem;
  margin-right: 1rem;
  font-size: 0.75rem;
  line-height: 1.25rem;
  white-space: pre-wrap;
  overflow: hidden;
  outline: none !important;
  color: var(--text-active-blue-france);
}

.fr-toggle label::after {
  font: normal normal normal 1rem/1 dsfr-icon;
  content: "";
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 1rem;
  left: 0;
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 50%;
  text-indent: -9999px;
  z-index: 1;
  color: var(--text-active-blue-france);
  box-shadow: inset 0 0 0 1px var(--border-action-high-blue-france);

  --blend: var(--background-default-grey-blend);
  background-color: var(--background-default-grey);
}

.fr-toggle .fr-hint-text {
  display: block;
  margin-top: 1rem;
  font-size: 0.75rem;
  line-height: 1.25rem;
  flex-basis: 100%;
  color: var(--text-mention-grey);
}

/*
 * Passage du label ferré à gauche, le toggle ferré à droite
 */
.fr-toggle--label-left .fr-toggle__input {
  order: 1;
  margin: 0 0 0 auto;
}

.fr-toggle--label-left .fr-toggle__input[data-fr-checked-label] ~ .fr-toggle__label {
  padding-left: 0;
  padding-right: 1rem;
}

.fr-toggle--label-left .fr-toggle__label {
  justify-content: space-between;
  padding-left: 0;
  width: calc(100% - 2.5rem);
}

.fr-toggle--label-left .fr-toggle__label::before {
  flex-shrink: 0;
  order: 1;
  margin-right: -2.5rem;
  margin-left: 1rem;
  text-align: right;
}

.fr-toggle--label-left .fr-toggle__label::after {
  left: auto;
  right: 1rem;
}

.fr-toggle--label-left .fr-hint-text {
  order: 2;
}

/*
 * On surcharge les styles de base
 */
.fr-toggle__list {
  --ul-type: none;
  --ol-type: none;
  --ul-start: 0;
  --ol-start: 0;
  --xl-block: 0;
  --li-bottom: 0;
  --ol-content: none;
}

.fr-toggle input[type="checkbox"]:checked {
  --blend: var(--background-active-blue-france-blend);
  background-color: var(--background-active-blue-france);
}

.fr-toggle input[type="checkbox"]:disabled,
.fr-toggle input[type="checkbox"][disabled] {
  box-shadow: inset 0 0 0 1px var(--border-disabled-grey);
}

.fr-toggle input[type="checkbox"]:disabled:checked,
.fr-toggle input[type="checkbox"][disabled]:checked {
  --blend: var(--background-disabled-grey-blend);
  background-color: var(--background-disabled-grey);
}

.fr-toggle input[type="checkbox"]:disabled + label::before,
.fr-toggle input[type="checkbox"][disabled] + label::before {
  color: var(--text-disabled-grey);
}

.fr-toggle input[type="checkbox"]:disabled + label::after,
.fr-toggle input[type="checkbox"][disabled] + label::after {
  color: var(--text-disabled-grey);
  box-shadow: inset 0 0 0 1px var(--border-disabled-grey);
}

.fr-toggle--border-bottom {
  box-shadow: inset 0 -1px 0 0 var(--border-default-grey);
}

.fr-toggle input[type="checkbox"]::-ms-check {
  display: none;
}

@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .fr-toggle label::before {
    color: #000091;
  }

  .fr-toggle label::after {
    color: #000091;
    box-shadow: inset 0 0 0 1px #000091;
    background-color: #fff;
  }

  .fr-toggle input[type="checkbox"] {
    box-shadow: inset 0 0 0 1px #000091;
  }

  .fr-toggle input[type="checkbox"]:checked {
    background-color: #000091;
  }

  .fr-toggle input[type="checkbox"]:disabled,
  .fr-toggle input[type="checkbox"][disabled] {
    box-shadow: inset 0 0 0 1px #e5e5e5;
  }

  .fr-toggle input[type="checkbox"]:disabled:checked,
  .fr-toggle input[type="checkbox"][disabled]:checked {
    background-color: #e5e5e5;
  }

  .fr-toggle input[type="checkbox"]:disabled + label::before,
  .fr-toggle input[type="checkbox"][disabled] + label::before {
    color: #929292;
  }

  .fr-toggle input[type="checkbox"]:disabled + label::after,
  .fr-toggle input[type="checkbox"][disabled] + label::after {
    color: #929292;
    box-shadow: inset 0 0 0 1px #e5e5e5;
  }

  .fr-toggle .fr-hint-text {
    color: #666;
  }

  .fr-toggle--border-bottom {
    box-shadow: inset 0 -1px 0 0 #e5e5e5;
  }
}
