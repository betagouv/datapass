{"version":3,"sources":["<no source>","../../../navigation.css","../../../../../../src/component/navigation/main.scss","../../../../../../src/component/navigation/style/module/_nav.scss","../../../../../../src/core/style/reset/tool/_link.scss","../../../../../../src/core/style/reset/tool/_list.scss","../../../../../../src/core/style/typography/tool/_styles.scss","../../../../../../src/core/style/spacing/tool/_z-index.scss","../../../../../../src/core/style/spacing/setting/_z-index.scss","../../../../../../src/core/style/selector/tool/_block.scss","../../../../../../src/core/style/display/tool/_display.scss","../../../../../../src/core/style/spacing/tool/_space.scss","../../../../../../src/core/style/color/tool/_element.scss","../../../../../../src/core/style/spacing/tool/_size.scss","../../../../../../src/core/style/action/tool/_hover.scss","../../../../../../src/core/style/selector/tool/_pseudo.scss","../../../../../../src/core/style/spacing/tool/_position.scss","../../../../../../src/core/style/spacing/function/_space.scss","../../../../../../src/core/style/icon/_tool.scss","../../../../../../src/component/navigation/style/module/_menu.scss","../../../../../../src/component/navigation/style/module/_mega-menu.scss","../../../../../../src/core/style/typography/tool/_font-weight.scss","../../../../../../src/core/style/typography/setting/_font-weight.scss","../../../../../../src/core/style/selector/tool/_breakpoint.scss","../../../../../../src/component/navigation/style/scheme/_nav.scss","../../../../../../src/component/navigation/style/scheme/_mega-menu.scss","../../../../../../src/legacy/style/tool/_legacy.scss","../../../../../../src/component/navigation/style/scheme/_menu.scss"],"names":[],"mappings":"AAAA;;GAAA;ACAA,gBAAgB;;ACKhB;;yCDFyC;AEEzC;ECYE,sBAAiB;EACjB,uBAAkB;EAClB,0BAAqB;ECMrB,eAAU;EACV,eAAU;EACV,aAAW;EACX,aAAW;EACX,aAAW;EACX,cAAY;EACZ,kBAAa;ECoEX,iBAA6B;EAA7B,kBAA6B;ECnF/B,aCDS;APGX;;AMGM;;EAEE,aAAS;ANAjB;;AQLE;ECPE,aAAa;EAIb,sBAAgB;ECgBhB,SRjBiB;EQiBjB,URhBkB;AFetB;;AQZG;;;;ENeK,iBAAiB;AFiBzB;;AQ1BE;ECbE,aAAa;EAIb,sBAAgB;EAIhB,oBAAa;EP4Cb,cAAc;ESbd,uDAAU;AX+Cd;;AErBE;;EUpBI,WAAO;EFzBT,kBRgDqB;EGvDvB,eAA6C;EAG3C,mBAA6D;EHsD7D,gBAAgB;;EWnBlB,uBAAkB;EFZhB,mCAAU;AXuEd;;AE7CG;;EAcG,kBAAkB;ESxCpB,qCAAU;AXkFd;;AcpHE;;EAGI,WZwEkB;EYpElB,cAAS;ECjBb,kBAAU;EAER,QAAK;EASL,WAAM;EHuCJ,UAAO;EAGP,cAAQ;EFhCR,oBMmEkB;ELtDlB,mDAAQ;EAUV,sDAAU;AX6Fd;;AE7CE;EACE,cAAc;AFgDlB;;AE7CE;EO3FE,aAAa;EAQb,mBAAa;EAIb,8BAAiB;EPiFjB,mBAAmB;AFkDvB;;Ac1IE;EG2CA,2CAJ0E;EAJ1E,YALU;EPnBN,mBMmEkB;ENnElB,eRkFuB;EACvB,0BAA0B;AF0DhC;;AcxJE;EZuGM,0BAA0B;AF2DlC;;AkB7KA;EZWE,aCHU;EGkBR,eM+DoB;EN/DpB,eM+DoB;EJtClB,WAAO;AZiIb;;AMpKM;;EAEE,aAAS;ANuKjB;;AQ5KE;EEaE,SQPiB;EROjB,wBM+DoB;AhByHxB;;AQrMG;;;;;;EGqJC,gBAAgB;AXqEpB;;AkBvOA;ERcM,kBM2EkB;EN1ElB,mBM0EkB;AhBmJxB;;AcjOE;EI0BI,OAAO;AlB2Mb;;AmBhPA;EbWE,aCHU;EGkBR,mBSxBuB;ETwBvB,eM+DoB;ELtDlB,8CAAQ;EAUV,iDAAU;AXkNd;;AM/OM;;EAEE,aAAS;ANkPjB;;AmBpQA;EAYI,aAAa;AnBuQjB;;AmBnRA;EA0BI,aAAa;AnBwQjB;;AmBlSA;ETcM,kBM2EkB;EN1ElB,mBM0EkB;AhBoNxB;;AclSE;EKyBI,OAAO;AnBmRb;;AmB/QE;ET1BI,kBM2EkB;EN1ElB,mBM0EkB;ENnElB,iBMmEkB;;EXKpB,0BAA6B;EAA7B,2BAA6B;ALiOjC;;AmB9QE;ECnCA,gBCXS;ArB6UX;;AmB3RE;ET/BI,sBMmEkB;EL5CpB,gDAAU;AXuSd;;AsBvUI;EdAF;INAI,mBAAmB;IACnB,iBAAiB;IQYnB,eM+DoB;EhBzDtB;;EQnBC;;;IESG,oBMmEkB;EhBpDtB;;EQxBC;;;;IEaC,aM+DoB;IN/DpB,SRMuB;IUmBrB,WAAO;IAGP,YAAQ;IVpBJ,kBcuDc;IdtDd,mBAAmB;EFuB3B;;EQ7CC;;;;IN8BS;;cFsBE;EACZ;;EcvDA;;;;ICVA,kBAAU;IAER,SAAK;IAML,SAAQ;IAGR,OAAM;IHuCJ,WAAO;IAGP,WAAQ;IFhCR,aRkB6B;EFsCjC;;EQjEC;;;;IFFD,aCDS;EP0ET;;EQjEA;IN4CI,uBAAuB;ISmGzB,gBAAgB;EXjElB;;EEhCI;IACE,qBAAqB;EFwC3B;;EEnCA;;IGpDA,mBAA6C;IAG3C,mBAA6D;ELoG/D;;EEzBA;IQvEE,+BM+DoB;IdoBlB,2BAA2B;EF6C/B;;EkB1JF;IHCE,kBAAU;IAER,SAAK;ILmBH,oBMmEkB;INnElB,oBMmEkB;EhBwGtB;;EctLA;IAGI,WIHe;IJOf,cAAS;ICjBb,kBAAU;IAER,MAAK;IAGL,QAAO;IAGP,SAAQ;IAGR,OAAM;ILcN,yBM+DoB;IV9EtB,WCPS;II+BL,8CAAQ;IAUV,iDAAU;EX+JZ;;EQ/LA;IEaE,iBM+DoB;IJtClB,YAAO;EZoKX;;EkBvNF;IR0BI,qBM+DoB;IL5CpB,kEAAU;EXwMZ;;Ec1OA;II+BM,OAAO;ElB8Mb;;EmBxPF;IJCE,kBAAU;IAER,SAAK;IAGL,QAAO;IAMP,OAAM;ILcN,gBSnBwB;ITmBxB,oBM+DoB;EhBqLtB;;EcnQA;IAGI,WKGkB;ILClB,cAAS;IFoCT,WAAQ;IFxCR,kBM2EkB;IN1ElB,mBM0EkB;INnElB,mBMmEkB;ILtDlB,iDAAQ;IAUV,oDAAU;EXgPZ;;EmB7RF;IA4BM,aAAa;EnB2QjB;;EmBvSF;IT0BI,qBM+DoB;EhByNtB;;EmB1QA;ITlBI,cSqBoB;IT7BpB,eS8BkB;IT7BlB,gBS6BkB;EnBwRtB;;EuBtTG;IZ+BD,qCAAU;;IAVR,iDAAQ;IAUV,oDAAU;EX2TZ;;EwB5VE;IbsJA,gBAAgB;EXgPlB;;EwBjYE;Ib4BA,iEAAU;EX2WZ;AAlXF;;AyB7BI;EFKC;IZ2BC,cAAU;IAAV,yBAAU;EXuYd;;EcraA;IH8BI,sBAAU;EX+Zd;;E0BvcA;IfwCI,+CAAU;EXqad;;EcncA;IH8BI,yBAAU;EXibd;;EwBzcE;IbwBE,8CAAU;EXmcd;AA3DF;;AyBxaI;EFPA;;IZuCE,cAAU;EXqXd;;EuB5ZG;;IZuCC,cAAU;EX2Xd;;EczZA;;IH8BI,yBAAU;EXiYd;;EQvZA;IGsBI,oCAAU;EXmZd;;EwB3bA;IbwCI,sBAAU;EX2ad;;EwBxcE;Ib6BE,6BAAU;EXubd;AAjEF","file":"navigation.css","sourcesContent":[null,"@charset \"UTF-8\";\n/* ------------------------------------ *\\\n  NAVIGATION\n\\* ------------------------------------ */\n.fr-nav {\n  --link-underline: none;\n  --link-blank-font: none;\n  --link-blank-content: none;\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n  --text-spacing: 0;\n  --title-spacing: 0;\n  z-index: 3500;\n}\n\n.fr-nav *:focus,\n.fr-nav *:focus-visible {\n  z-index: 4000;\n}\n\n.fr-nav__list {\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n}\n\n@media (min-width: 62em) {\n  .fr-nav__list {\n    flex-direction: row;\n    flex-wrap: nowrap;\n    margin: 0 -1rem;\n  }\n  .fr-nav__list > *:first-child:nth-last-child(2) ~ *,\n  .fr-nav__list > *:first-child:nth-last-child(3) ~ *,\n  .fr-nav__list > *:first-child:nth-last-child(4) ~ * {\n    margin-left: 1.25rem;\n  }\n}\n\n.fr-nav__list > .fr-nav__link,\n.fr-nav__list > .fr-nav__btn,\n.fr-nav__list > * > .fr-nav__link,\n.fr-nav__list > * > .fr-nav__btn {\n  font-weight: bold;\n}\n\n@media (min-width: 62em) {\n  .fr-nav__list > .fr-nav__link,\n  .fr-nav__list > .fr-nav__btn,\n  .fr-nav__list > * > .fr-nav__link,\n  .fr-nav__list > * > .fr-nav__btn {\n    padding: 1rem;\n    margin: 0;\n    width: auto;\n    height: 100%;\n    min-height: 3.5rem;\n    font-weight: normal;\n  }\n  .fr-nav__list > .fr-nav__link[aria-current],\n  .fr-nav__list > .fr-nav__btn[aria-current],\n  .fr-nav__list > * > .fr-nav__link[aria-current],\n  .fr-nav__list > * > .fr-nav__btn[aria-current] {\n    /**\n             * Pour conserver le souligné de selection  par dessus la barre de mega-menu\n             */\n  }\n  .fr-nav__list > .fr-nav__link[aria-current]::before,\n  .fr-nav__list > .fr-nav__btn[aria-current]::before,\n  .fr-nav__list > * > .fr-nav__link[aria-current]::before,\n  .fr-nav__list > * > .fr-nav__btn[aria-current]::before {\n    position: absolute;\n    top: auto;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    margin-top: 0;\n  }\n  .fr-nav__list > .fr-nav__link[aria-current]:not([aria-expanded=\"true\"]),\n  .fr-nav__list > .fr-nav__btn[aria-current]:not([aria-expanded=\"true\"]),\n  .fr-nav__list > * > .fr-nav__link[aria-current]:not([aria-expanded=\"true\"]),\n  .fr-nav__list > * > .fr-nav__btn[aria-current]:not([aria-expanded=\"true\"]) {\n    z-index: 3500;\n  }\n}\n\n.fr-nav__item {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  flex: 0 1 auto;\n}\n\n@media (min-width: 62em) {\n  .fr-nav__item {\n    box-shadow: none;\n  }\n}\n\n@media (min-width: 62em) {\n  .fr-nav__item {\n    align-items: flex-start;\n  }\n  .fr-nav__item--align-right {\n    align-items: flex-end;\n  }\n}\n\n.fr-nav__link, .fr-nav__btn {\n  width: 100%;\n  padding: 0.75rem 0;\n  font-size:  1rem ;\n  line-height:  1.5rem ;\n  text-align: left;\n  --blend-full-size: 100%;\n}\n\n@media (min-width: 62em) {\n  .fr-nav__link, .fr-nav__btn {\n    font-size:  0.875rem ;\n    line-height:  1.5rem ;\n  }\n}\n\n.fr-nav__link[aria-current], .fr-nav__btn[aria-current] {\n  position: relative;\n}\n\n.fr-nav__link[aria-current]::before, .fr-nav__btn[aria-current]::before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: -1rem;\n  width: 2px;\n  height: 1.5rem;\n  margin-top: -0.75rem;\n}\n\n.fr-nav__link {\n  display: block;\n}\n\n.fr-nav__btn {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n}\n\n@media (min-width: 62em) {\n  .fr-nav__btn {\n    padding: 1rem 0.75rem 1rem 1rem;\n  }\n}\n\n.fr-nav__btn::after {\n  font: normal normal normal 1rem/1 dsfr-icon;\n  content: \"\";\n  margin-left: 0.5rem;\n  margin-right: 0;\n  transition: transform 0.3s;\n}\n\n@media (min-width: 62em) {\n  .fr-nav__btn {\n    justify-content: flex-start;\n  }\n}\n\n.fr-nav__btn[aria-expanded=\"true\"]::after {\n  transform: rotate(-180deg);\n}\n\n.fr-menu {\n  z-index: 2500;\n  margin: 0 -1rem;\n  padding: 0 1rem;\n  width: auto;\n}\n\n.fr-menu *:focus,\n.fr-menu *:focus-visible {\n  z-index: 3000;\n}\n\n@media (min-width: 62em) {\n  .fr-menu {\n    position: absolute;\n    top: 100%;\n    margin-top: -0.25rem;\n    padding-top: 0.25rem;\n  }\n  .fr-menu::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: 0.25rem 1rem 2rem;\n    z-index: -1;\n  }\n}\n\n.fr-menu__list {\n  margin: 0;\n  padding: 0.5rem 0 1.5rem;\n}\n\n@media (min-width: 62em) {\n  .fr-menu__list {\n    padding: 0 0 2rem;\n  }\n}\n\n@media (min-width: 62em) {\n  .fr-menu__list {\n    width: 20rem;\n  }\n}\n\n.fr-menu__list > *:first-child,\n.fr-menu__list > *:first-child > .fr-nav__link,\n.fr-menu__list > *:hover,\n.fr-menu__list > *:hover > .fr-nav__link,\n.fr-menu__list > *:hover + *,\n.fr-menu__list > *:hover + * > .fr-nav__link {\n  box-shadow: none;\n}\n\n.fr-menu .fr-nav__link {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n.fr-menu .fr-nav__link::before {\n  left: 0;\n}\n\n@media (min-width: 62em) {\n  .fr-menu .fr-nav__link {\n    padding: 0.75rem 1rem;\n  }\n  .fr-menu .fr-nav__link::before {\n    left: 0;\n  }\n}\n\n.fr-mega-menu {\n  z-index: 2500;\n  margin: 0 -1rem 1px;\n  padding: 0 1rem;\n}\n\n.fr-mega-menu *:focus,\n.fr-mega-menu *:focus-visible {\n  z-index: 3000;\n}\n\n@media (min-width: 62em) {\n  .fr-mega-menu {\n    position: absolute;\n    top: 100%;\n    right: 0;\n    left: 0;\n    margin: -2px 0 0;\n    padding: 0 0 2.25rem;\n  }\n}\n\n.fr-mega-menu:focus {\n  outline: none;\n}\n\n@media (min-width: 62em) {\n  .fr-mega-menu > .fr-container::before {\n    content: \"\";\n    display: block;\n    height: 2px;\n    margin-left: -1rem;\n    margin-right: -1rem;\n    margin-bottom: 1rem;\n  }\n}\n\n.fr-mega-menu .fr-link--close {\n  display: none;\n}\n\n@media (min-width: 62em) {\n  .fr-mega-menu .fr-link--close {\n    display: flex;\n  }\n}\n\n.fr-mega-menu .fr-nav__link {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n@media (min-width: 62em) {\n  .fr-mega-menu .fr-nav__link {\n    padding: 0.75rem 1rem;\n  }\n}\n\n.fr-mega-menu .fr-nav__link::before {\n  left: 0;\n}\n\n.fr-mega-menu__leader {\n  padding-left: 1rem;\n  padding-right: 1rem;\n  padding-top: 1rem;\n  --text-spacing: 0 0 0.5rem;\n  --title-spacing: 0 0 0.5rem;\n}\n\n@media (min-width: 62em) {\n  .fr-mega-menu__leader {\n    padding-top: 0;\n  }\n}\n\n@media (min-width: 62em) {\n  .fr-mega-menu__leader {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n\n.fr-mega-menu__category {\n  font-weight: 700;\n}\n\n.fr-mega-menu__list {\n  padding-bottom: 1.5rem;\n}\n\n.fr-nav__link, .fr-nav__btn {\n  color: var(--text-action-high-grey);\n}\n\n.fr-nav__link[aria-current], .fr-nav__btn[aria-current] {\n  color: var(--text-active-blue-france);\n}\n\n.fr-nav__link[aria-current]::before, .fr-nav__btn[aria-current]::before {\n  --blend: var(--background-active-blue-france-blend);\n  background-color: var(--background-active-blue-france);\n}\n\n@media (min-width: 62em) {\n  .fr-nav__btn[aria-expanded=\"true\"] {\n    color: var(--text-active-blue-france);\n    --blend: var(--background-open-blue-france-blend);\n    background-color: var(--background-open-blue-france);\n  }\n}\n\n.fr-nav__item {\n  box-shadow: inset 0 -1px 0 0 var(--border-default-grey);\n}\n\n@media (min-width: 62em) {\n  .fr-nav__item {\n    box-shadow: none;\n  }\n}\n\n@media (min-width: 62em) {\n  .fr-menu::after {\n    --blend: var(--background-elevated-grey-blend);\n    background-color: var(--background-elevated-grey);\n  }\n  .fr-menu .fr-nav__link {\n    box-shadow: 0 calc(-1rem - 1px) 0 -1rem var(--border-default-grey);\n  }\n}\n\n.fr-mega-menu {\n  --blend: var(--background-elevated-grey-blend);\n  background-color: var(--background-elevated-grey);\n}\n\n@media (min-width: 62em) {\n  .fr-mega-menu > .fr-container::before {\n    --blend: var(--background-open-blue-france-blend);\n    background-color: var(--background-open-blue-france);\n  }\n}\n\n.fr-mega-menu__list {\n  box-shadow: 0 1px 0 0 var(--border-default-grey);\n}\n\n@media (min-width: 62em) {\n  .fr-mega-menu__list {\n    box-shadow: none;\n  }\n}\n\n@media (min-width: 62em) {\n  .fr-mega-menu__category {\n    box-shadow: 0 calc(1rem + 1px) 0 -1rem var(--border-default-grey);\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-nav__link, .fr-nav__btn {\n    color: #161616;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-nav__link[aria-current], .fr-nav__btn[aria-current] {\n    color: #000091;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-nav__link[aria-current]::before, .fr-nav__btn[aria-current]::before {\n    background-color: #000091;\n  }\n}\n\n@media all and (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-nav__btn[aria-expanded=\"true\"] {\n    color: #000091;\n  }\n}\n\n@media all and (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-nav__btn[aria-expanded=\"true\"] {\n    background-color: #e3e3fd;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-nav__item {\n    box-shadow: inset 0 -1px 0 0 #e5e5e5;\n  }\n}\n\n@media (min-width: 62em) {\n  .fr-nav__item {\n    box-shadow: none;\n  }\n}\n\n@media all and (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-menu::after {\n    background-color: #fff;\n  }\n}\n\n@media all and (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-menu .fr-nav__link {\n    box-shadow: 0 calc(-1rem - 1px) 0 -1rem #e5e5e5;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-mega-menu {\n    background-color: #fff;\n  }\n}\n\n@media all and (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-mega-menu > .fr-container::before {\n    background-color: #e3e3fd;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-mega-menu__list {\n    box-shadow: 0 1px 0 0 #e5e5e5;\n  }\n}\n\n@media (min-width: 62em) {\n  .fr-mega-menu__list {\n    box-shadow: none;\n  }\n}\n\n@media all and (min-width: 62em) and (-ms-high-contrast: none), (min-width: 62em) and (-ms-high-contrast: active) {\n  .fr-mega-menu__category {\n    box-shadow: 0 calc(1rem + 1px) 0 -1rem #e5e5e5;\n  }\n}\n","////\n/// Navigation Main\n/// @group navigation\n////\n\n/* ------------------------------------ *\\\n  NAVIGATION\n\\* ------------------------------------ */\n\n@import 'index';\n@import 'style/module';\n@import 'style/scheme';\n\n@include _navigation-scheme;\n","////\n/// Navigation Module : Nav\n/// @group navigation\n////\n\n#{ns(nav)} {\n  @include disable-link-style;\n  @include disable-list-style;\n  @include set-text-margin(0);\n  @include set-title-margin(0);\n  @include z-index(nav, true);\n\n  @include list {\n    @include display-flex(column);\n    @include margin(0);\n    @include padding(0);\n\n    @include respond-from(lg) {\n      flex-direction: row;\n      flex-wrap: nowrap;\n      @include margin(0 -4v);\n\n      & > *:first-child:nth-last-child(2) ~ *,\n      & > *:first-child:nth-last-child(3) ~ *,\n      & > *:first-child:nth-last-child(4) ~ * {\n        @include margin-left(5v);\n      }\n    }\n\n    &,\n    & > * {\n      & > #{ns(nav__link)},\n      & > #{ns(nav__btn)} {\n        font-weight: bold;\n\n        @include respond-from(lg) {\n          @include padding(4v);\n          @include margin(0);\n          @include size(auto, 100%);\n          min-height: space(14v);\n          font-weight: normal;\n\n          &[aria-current] {\n            @include before {\n              @include absolute(auto, null, 0, 0, 100%, 2px);\n              @include margin-top(0);\n            }\n\n            /**\n             * Pour conserver le souligné de selection  par dessus la barre de mega-menu\n             */\n            &:not([aria-expanded=\"true\"]) {\n              @include z-index(nav);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @include list-item {\n    // TODO: supprimer la stylisation de la liste item, trouver une solution différente pour l'affichage du menu à droite et la barre d'espacement grise en mobile\n    @include display-flex(column, stretch);\n    flex: 0 1 auto;\n\n    @include scheme-element-no-box-shadow(lg);\n\n    @include respond-from(lg) {\n      align-items: flex-start;\n\n      &--align-right {\n        align-items: flex-end;\n      }\n    }\n  }\n\n  &__link,\n  &__btn {\n    @include size(100%);\n    @include padding(3v 0);\n    @include text-style(md);\n    text-align: left;\n\n    @include respond-from(lg) {\n      @include text-style(sm);\n    }\n\n    @include enable-blend;\n\n    &[aria-current] {\n      position: relative;\n      @include before('', block) {\n        @include absolute(50%, null, null, -4v, 2px, 6v);\n        @include margin-top(-3v);\n      }\n    }\n  }\n\n  &__link {\n    display: block;\n  }\n\n  &__btn {\n    @include display-flex(null, center, space-between);\n    flex-direction: row;\n    @include padding(4v 3v 4v 4v, lg);\n\n    @include icon(arrow-down-s-line, sm, after) {\n      @include margin-left(2v);\n      @include margin-right(0);\n      transition: transform 0.3s;\n    }\n\n    @include respond-from(lg) {\n      justify-content: flex-start;\n    }\n\n    &[aria-expanded=\"true\"] {\n      @include after {\n        transform: rotate(-180deg);\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Reset\n/// @group core\n////\n\n@mixin a-reset {\n  text-decoration: none;\n  color: inherit;\n}\n\n@mixin enable-link-style() {\n  --link-underline: 0 1px 0 0 currentColor;\n  --link-blank-font: #{font-icon(sm)};\n  --link-blank-content: \"\\00a0#{icon-glyph(external-link-line)}\";\n}\n\n@mixin disable-link-style() {\n  --link-underline: none;\n  --link-blank-font: none;\n  --link-blank-content: none;\n}\n\n@mixin link-underline() {\n  box-shadow: var(--link-underline);\n}\n\n@mixin link-blank() {\n  @include after(var(--link-blank-content)) {\n    font: var(--link-blank-font);\n  }\n}\n","////\n/// Core Tool : Reset list\n/// @group core\n////\n\n@mixin enable-list-style() {\n  $selector: null;\n\n  @if & == null {\n    $selector: ':root';\n  }\n\n  @include nest($selector) {\n    --ul-type: \"●\\00a0\\00a0\";\n    --ol-type: decimal;\n    --ul-start: #{space(4v)};\n    --ol-start: #{space(6v)};\n    --xl-block: #{space(2v)};\n    --li-bottom: #{space(1v)};\n    --xl-base: 1em;\n    --ol-content: counters(li-counter, \".\") \".\\00a0\\00a0\";\n  }\n}\n\n@mixin disable-list-style() {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n}\n","////\n/// Core Tool : Typography build\n/// @group core\n////\n\n@function get-text-style($font-size) {\n  @return map-get($text-styles, $font-size);\n}\n\n@function get-title-style($font-size) {\n  @return map-get($title-styles, $font-size);\n}\n\n@mixin _stylize($font-size, $styles, $prepend, $append) {\n  $style: map-get($styles, $font-size);\n\n  @if $prepend == null {\n    $prepend: '';\n  }\n\n  @if $append == null {\n    $append: '';\n  }\n\n  font-size: #{$prepend} #{px-rem($font-size)} #{$append};\n\n  @if map-has-key($style, line-height) {\n    line-height: #{$prepend} space(map-get($style, line-height)) #{$append};\n  }\n}\n\n@mixin _responsive-styles($settings, $styles, $is-responsive, $prepend, $append) {\n  $breakpoints: map-get($settings, breakpoints);\n\n  @if map-has-key($settings, weight) {\n    font-weight: #{$prepend} map-get($font-weight-scale, map-get($settings, weight)) #{$append};\n  }\n\n  @if $is-responsive {\n    @each $breakpoint, $size in $breakpoints {\n      @if $breakpoint == first {\n        @include _stylize($size, $styles, $prepend, $append);\n      }\n      @else {\n        @include respond-from($breakpoint) {\n          @include _stylize($size, $styles, $prepend, $append);\n        }\n      }\n    }\n  }\n  @else {\n    @if map-has-key($breakpoints, md) {\n      @include _stylize(map-get($breakpoints, md), $styles);\n    }\n    @else {\n      @include _stylize(map-get($breakpoints, first), $styles);\n    }\n  }\n}\n\n@mixin _space-text($settings) {\n  @include margin( var(#{'--' + map-get($settings, 'margin') + '-spacing'}) );\n}\n\n@mixin text-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($text-settings, $name);\n  $append: '';\n  @if $important {\n    $append: ' !important';\n  }\n\n  @include _responsive-styles($settings, $text-styles, $is-responsive, $prepend, $append);\n\n  @if $with-spacing {\n    @include _space-text($settings);\n  }\n}\n\n@mixin title-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($title-settings, $name);\n  $append: '';\n  @if $important {\n    $append: ' !important';\n  }\n\n  @include _responsive-styles($settings, $title-styles, $is-responsive, $prepend, $append);\n\n  @if $with-spacing {\n    @include _space-text($settings);\n  }\n}\n\n@mixin _set-typography-var($name, $value, $bp: null) {\n  @if $bp != null {\n    @include respond-from(#{$bp}) {\n      --#{$name}-spacing: #{space($value)};\n    }\n  }\n  @else {\n    --#{$name}-spacing: #{space($value)};\n  }\n}\n\n@mixin set-title-margin($margin, $bp:null) {\n  @include _set-typography-var(title, $margin, $bp);\n}\n\n@mixin set-text-margin($margin, $bp:null) {\n  @include _set-typography-var(text, $margin, $bp);\n}\n\n@mixin set-display-margin($margin, $bp:null) {\n  @include _set-typography-var(display, $margin, $bp);\n}\n","////\n/// Core Tool : Spacing z-index\n/// @group core\n////\n\n/// Fonction de gestion des z-index\n/// @access public\n/// @param {String} $index-name - nom du calque de z-index\n@function z-index($index-name) {\n  @return map-get($z-indexes, $index-name);\n}\n\n/// Mixin de gestion des z-index\n/// @access public\n/// @param {String} $index-name - nom du calque de z-index\n@mixin z-index($index-name, $focus: false) {\n  z-index: z-index($index-name);\n  @if $focus {\n    $focus-z-index: z-index($index-name + '-focus');\n\n    @if $focus-z-index != null {\n      *:focus,\n      *:focus-visible {\n        z-index: #{$focus-z-index};\n      }\n    }\n  }\n}\n","////\n/// Core Setting : Spacing z-index\n/// @group core\n////\n\n/// Liste des z-index présent dans le DS\n/// @type map\n$z-indexes: (\n  auto: auto,\n  under: -1,\n  base: 0,\n  over: 1,\n  focus: 2000,\n  menu: 2500,\n  menu-focus: 3000,\n  nav: 3500,\n  nav-focus: 4000,\n  consent: 4500,\n  consent-focus: 5000,\n  modal: 5500,\n  modal-focus: 6000,\n  modal-footer: 6500,\n);\n","////\n/// Core Tool : Selector block\n/// @group core\n////\n\n@mixin title() {\n  &__title {\n    @content;\n  }\n}\n\n@mixin body() {\n  &__body {\n    @content;\n  }\n}\n\n@mixin list() {\n  &__list {\n    @content;\n  }\n}\n\n@mixin list-item() {\n  &__item {\n    @content;\n  }\n}\n","////\n/// Core Tool : Display display\n/// @group core\n////\n\n@mixin display-flex($flex-direction: row, $align-items: null, $justify-content: null, $flex-wrap: null, $inline: false) {\n\n  @if $inline == true {\n    display: inline-flex;\n  }\n  @else {\n    display: flex;\n  }\n\n  @if $flex-direction != null {\n    flex-direction: #{$flex-direction};\n  }\n\n  @if $align-items != null {\n    align-items: #{$align-items};\n  }\n\n  @if $justify-content != null {\n    justify-content: #{$justify-content};\n  }\n\n  @if $flex-wrap != null {\n    flex-wrap: #{$flex-wrap};\n  }\n}\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n/// Set space property\n///\n/// @param {String} $property [\"margin\"] - propriété à appliquer à l'espacement `[\"margin\", \"padding\"]`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `[\"x\", \"y\", \"top\", \"right\", \"bottom\", \"left\"]`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing(\"margin\", 6v, \"bottom\");\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// Core Color Tools : Element\n/// @group core\n////\n\n$ACCENT: none;\n\n@mixin _scheme-element($prop, $part, $decisions, $legacy: false, $important: false, $value: $COLOR, $hover: false) {\n  $result: str-replace($value, '$COLOR', '$color#1');\n  $length: length($decisions) / 2;\n  @for $i from 1 through $length {\n    $token: nth($decisions, $i * 2 - 1);\n    $tint: nth($decisions, $i * 2);\n    @if $tint == accent {\n      $tint: $ACCENT;\n    }\n    $needle: '$color#1';\n    @if length($decisions) > 2 {\n      $needle: '$color##{$i}';\n    }\n    $part-token: _get-part-token($part, $token);\n    $p: map-get($part-token, part);\n    $token: map-get($part-token, token);\n\n    @if $tint == neutral {\n      $tint: _get-neutral-tint($p, $token);\n    }\n    $color: _get-value($p, $token, $tint, $legacy);\n    $result: _replace_color($result, $color, $needle);\n\n    @if $important {\n      $result: #{$result} !important;\n    }\n\n    @if $hover and $part == background and $p == background and $legacy == false {\n      $blend: var(#{_get-decision-prop($part, $token, $tint)}-blend);\n      @if $important {\n        $blend: #{$blend} !important;\n      }\n\n      --blend: #{$blend};\n    }\n  }\n\n  @if $legacy {\n    @include legacy(ie11) {\n      #{$prop}: #{$result};\n    }\n  }\n  @else {\n    #{$prop}: #{$result};\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-bg-color($decisions, $legacy: false, $important: false) {\n  @include _scheme-element(background-color, background, $decisions, $legacy, $important, $COLOR, true);\n}\n\n@mixin scheme-element-bg-transparent($legacy: false, $hover: false) {\n  @if $legacy {\n    @include legacy(ie11) {\n      background-color: transparent;\n    }\n  }\n  @else {\n    background-color: transparent;\n    @if $hover {\n      --blend: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-bg-image-color($decisions, $legacy: false, $important: false, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: length($decisions) / 2;\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: unquote('$color##{$i}');\n      $transformed: append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include _scheme-element(background-image, background, $decisions, $legacy, $important, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-text-color($decisions, $legacy: false, $important: false) {\n  @include _scheme-element(color, text, $decisions, $legacy, $important);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-fill-color($decisions, $legacy: false, $important: false) {\n  @include _scheme-element(fill, background , $decisions, $legacy, $important);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de border\n/// @param {String} $side - le côté affecté. valeurs: top, right, bottom, left\n@mixin scheme-element-border-color($decisions, $legacy: false, $important: false, $value:1px solid $COLOR, $side:null) {\n  $prop:border;\n  @if $side != null {\n    $prop:border-#{$side};\n  }\n  @include _scheme-element($prop, border, $decisions, $legacy, $important, $value);\n}\n\n@mixin scheme-element-no-border($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    border: 0;\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin scheme-element-outline-color($decisions, $legacy: false, $important: false, $value:1px solid $COLOR) {\n  @include _scheme-element(outline, border, $decisions, $legacy, $important, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin scheme-element-box-shadow-color($decisions, $legacy: false, $important: false, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: length($decisions) / 2;\n  $i: 1;\n  @each $v in $value {\n    @if map-has-key($box-shadows, $v) {\n      $transformed: append($transformed, _get-box-shadow($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include _scheme-element(box-shadow, border, $decisions, $legacy, $important, space($value));\n}\n\n@mixin scheme-element-no-box-shadow($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    box-shadow: none;\n  }\n}\n","////\n/// Core Tool : Spacing size\n/// @group core\n////\n\n@mixin width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n  }\n}\n\n@mixin min-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      min-width: #{space($width)};\n    }\n  }\n}\n\n@mixin max-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      max-width: #{space($width)};\n    }\n  }\n}\n\n@mixin height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      min-height: #{space($height)};\n    }\n  }\n}\n\n@mixin max-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      max-height: #{space($height)};\n    }\n  }\n}\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{space($max-height)};\n    }\n  }\n}\n","////\n/// Core Tool : Action Hover\n/// @group core\n////\n\n@mixin hover-media-query () {\n  @media (hover: hover) and (pointer: fine) {\n    @content;\n  }\n}\n\n@mixin hover-type-selector($elements, $type: all) {\n  $selectors: ();\n\n  @each $element, $setting in $elements {\n    $hover: map-get($setting, hover);\n    $selector: map-get($setting, selector);\n    @if $hover {\n      @if $type == map-get($hover, type) or $type == all {\n        $nested: nest($selector, map-get($hover, selector));\n        $associated: $nested;\n        @if & != null and quote(&) != ':root' {\n          $associated: selector-associate(quote(&), $nested);\n        }\n        $selectors: append($selectors, $associated, 'comma');\n      }\n    }\n  }\n\n  @at-root #{$selectors} {\n    @content;\n  }\n}\n\n@mixin hover-blend($background-images: (), $background-sizes: (), $background-positions: ()) {\n  --hsla: #{css-hsl-alpha(var(--blend), var(--a))};\n  --blend-size: 0%; // 2048px 2048px;\n  --blend-position: 50%;\n  @include hover-blend-background($background-images, $background-sizes, $background-positions);\n\n  &:hover,\n  &:active {\n    --blend-size: var(--blend-full-size); // 2048px 2048px;\n  }\n\n  &:hover {\n    --a: #{$hover-alpha};\n  }\n\n  &:active {\n    --a: #{$active-alpha};\n  }\n}\n\n@mixin hover-blend-background($background-images: (), $background-sizes: (), $background-positions: ()) {\n  background-repeat: no-repeat;\n  background-size: append($background-sizes, var(--blend-size));\n  background-position: append($background-positions, var(--blend-position));\n  background-image: append($background-images, radial-gradient(circle at center, var(--hsla), var(--hsla) 3%));\n}\n\n@mixin enable-blend() {\n  --blend-full-size: 100%;\n}\n\n@mixin disable-blend() {\n  --blend-full-size: 0;\n}\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","////\n/// Core Tool : Spacing position\n/// @group core\n////\n\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  position: #{$position};\n  @if $top != null {\n    top: #{space($top)};\n  }\n  @if $right != null {\n    right: #{space($right)};\n  }\n  @if $bottom != null {\n    bottom: #{space($bottom)};\n  }\n  @if $left != null {\n    left: #{space($left)};\n  }\n\n  @include size($width, $height);\n\n  @content;\n}\n\n@mixin relative($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(relative, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(absolute, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin fixed($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(fixed, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin sticky($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(sticky, $top, $right, $bottom, $left, $width, $height);\n}\n","////\n/// Core Function : Spacing space\n/// @group core\n////\n\n/// Return space value from type map and convert to rem.\n///\n/// @param {Number} $value - valeur de l'espacement, permet de convertir cet espacement de v (4px) ou w (8px) en rem\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     margin-bottom: space(6v);\n///   }\n@function space($value) {\n  @if type-of($value) == list {\n    $list: ();\n    $separator: list-separator($value);\n    @each $v in $value {\n      $list: append($list, space($v), $separator);\n    }\n    @return $list;\n  }\n  @if type-of($value) == string {\n    $c: str-index($value, '(');\n    @if $c {\n      $b: null;\n      $n: 0;\n      $i: $c + 1;\n      $l: str-length($value);\n      @while $b == null and $i <= $l {\n        $char: str-slice($value, $i, $i);\n        @if $char == '(' {\n          $n: $n + 1;\n        }\n        @else if $char == ')' {\n          @if $n > 0 {\n            $n: $n - 1;\n          }\n          @else {\n            $b: $i;\n          }\n        }\n        $i: $i + 1;\n      }\n\n      $start: unquote('');\n      $middle: space(str-slice($value, $c + 1, $b - 1));\n      $end: unquote('');\n\n      @if $c > 1 {\n        $start: space(str-slice($value, 1, $c - 1));\n      }\n\n      $l: str-length($value);\n      @if $b < $l {\n        $end: space(str-slice($value, $b + 1, $l));\n      }\n\n      @return unquote('#{$start}(#{$middle})#{$end}');\n    }\n\n    @if str-index($value, ',') {\n      @return space(str-split($value, ','));\n    }\n\n    @if str-index($value, ' ') {\n      @return space(str-split($value, ' '));\n    }\n\n    $value: unquote($value);\n  }\n\n  @if $value == 0 {\n    @return $value;\n  }\n\n  @if length($value) > 1 {\n    $result: ();\n    @each $v in $value {\n      $result: append($result, space($v));\n    }\n    @return $result;\n  }\n\n  @if is-basic-unit($value) {\n    @return $value;\n  }\n\n  $v: quote($value);\n\n  $q: str-to-num(unquote(str_slice($v, 0, str_length($v) - 1)));\n  $unit: str_slice($v, str-length($v), str_length($v));\n\n  @if is-unit($value, v) {\n    @return $q * 0.25rem;\n  }\n  @else if is-unit($value, w) {\n    @return $q * 0.5rem;\n  }\n  @return $value;\n}\n","////\n/// Core Tool : Icon\n/// @group core\n////\n\n/// Return icon size from map\n/// @param {String} $size [\"md\"] - Icon size from `$icon-size-map` (Default to \"md\" = 16px)\n///\n/// @example scss - Set icon size to `SM` (12px)\n///   .foo {\n///     width: icon-size(sm);\n///     height: icon-size(sm);\n///   }\n@function icon-size($size: md) {\n  @return px-rem(map-get($icon-size-map, $size));\n}\n\n@mixin icon-size($size:md) {\n  font-size: #{icon-size($size)} !important;\n}\n\n@mixin with-icon($size:md) {\n  @include has-icon {\n    @include before {\n      @if $size != md {\n        @include icon-size($size);\n      }\n      @content;\n    }\n  }\n}\n\n@mixin generate-icons($base) {\n  @each $icon, $settings in $icons-settings {\n    #{ns($base + '-' + $icon)} {\n      @include before(icon-glyph($icon));\n    }\n  }\n}\n\n@function icon-glyph($icon, $is-ligature: false) {\n  $icon-settings: map-get($icons-settings, $icon);\n  @if $is-ligature {\n    @return \"#{map-get($icon-settings, ligature)}\";\n  }\n  @else {\n    @return \"#{map-get($icon-settings, codepoint)}\";\n  }\n}\n\n@mixin icon-content($icon) {\n  content: icon-glyph($icon);\n}\n\n@function font-icon($size: md) {\n  @return normal normal normal #{icon-size($size)}/1 #{$namespace}-icon;\n}\n\n@mixin font-icon($size: md) {\n  font: font-icon($size);\n}\n\n@mixin icon($icon:null, $size:md, $pseudo:before) {\n  @include _pseudo($pseudo) {\n    @if $size != null {\n      @include font-icon($size);\n    }\n\n    @if $icon != null {\n      @include icon-content($icon);\n    }\n\n    @content;\n  }\n}\n","////\n/// Navigation Module : Menu\n/// @group navigation\n////\n\n#{ns(menu)} {\n  @include z-index(menu, true);\n  @include margin(0 -4v);\n  @include padding(0 4v);\n  @include size(auto);\n\n  @include respond-from(lg) {\n    @include absolute(100%);\n    @include margin-top(-1v);\n    @include padding-top(1v);\n\n    @include after('', block) {\n      @include absolute(0,0,0,0);\n      @include margin(1v 4v 8v);\n      @include z-index(under);\n    }\n  }\n\n  @include list {\n    @include margin(0);\n    @include padding(2v 0 6v);\n    @include padding(0 0 8v, lg);\n    @include size(80v, null, lg);\n\n    & > *:first-child,\n    & > *:hover,\n    & > *:hover + * {\n      &,\n      & > #{ns(nav__link)} {\n        @include scheme-element-no-box-shadow;\n      }\n    }\n  }\n\n  #{ns(nav__link)} {\n    @include padding-x(4v);\n    @include before {\n      left: 0;\n    }\n    @include respond-from(lg) {\n      @include padding(3v 4v);\n      @include before {\n        left: 0;\n      }\n    }\n  }\n}\n","////\n/// Navigation Module : Mega menu\n/// @group navigation\n////\n\n#{ns(mega-menu)} {\n  @include z-index(menu, true);\n  @include margin(0 -4v 1px);\n  @include padding(0 4v);\n\n  @include respond-from(lg) {\n    @include absolute(100%, 0, null, 0);\n    @include margin(-2px 0 0);\n    @include padding(0 0 9v);\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  > #{ns(container)} {\n    @include respond-from(lg) {\n      @include before('', block) {\n        @include size(null, 2px);\n        @include margin-x(-4v);\n        @include margin-bottom(4v);\n      }\n    }\n  }\n\n  #{ns(link--close)} {\n    display: none;\n    @include respond-from(lg) {\n      display: flex;\n    }\n  }\n\n  #{ns(nav__link)} {\n    @include padding-x(4v);\n    @include padding(3v 4v, lg);\n    @include before {\n      left: 0;\n    }\n  }\n\n  &__leader {\n    @include padding-x(4v);\n    @include padding-top(4v);\n    @include padding-top(0, lg);\n    @include padding-x(0, lg);\n    @include set-text-margin(0 0 2v);\n    @include set-title-margin(0 0 2v);\n  }\n\n  &__category {\n    @include font-weight(bold);\n  }\n\n  &__list {\n    @include padding-bottom(6v);\n  }\n}\n","////\n/// Core Tool : Typography font-weight\n/// @group core\n////\n\n/// Return font-weight value from font-weight map.\n///\n/// @param {String} $scale [\"regular\"] - Type scale value from `$weight-scale` (Default to \"regular\" = 400)\n///\n/// @example scss - Set font-weight to bold (700)\n///   .foo {\n///     font-weight: font-weight(\"bold\");\n///   }\n\n@function font-weight($scale: regular) {\n  @return map-get($font-weight-scale, $scale);\n}\n\n@mixin font-weight($scale) {\n  font-weight: font-weight($scale);\n}\n\n@mixin font-weights() {\n  @each $name, $weight in $font-weight-scale {\n    & #{ns('text--' + $name)} {\n      font-weight: #{$weight} !important;\n    }\n  }\n}\n","////\n/// Core Setting : Typography font-weight\n/// @group core\n////\n\n$font-weight-scale: (\n  light: 300,\n  regular: 400,\n  bold: 700,\n  xx-bold: 900\n);\n","////\n/// Core Tool : Selector Breakpoint\n/// @group core\n////\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `[\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `[\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-to(md) {\n///     }\n///   }\n@mixin respond-to($media) {\n\n  @debug 'afin de rester mobile first, n‘utiliser la mixin respond-to uniquement s‘il n‘y a pas d‘autre alternative, lui préférer systématiquement la mixin respond-from';\n\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null and length($limits) == 2 {\n    @media (max-width: nth($limits, 2)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","////\n/// Navigation Scheme : Nav\n/// @group navigation\n////\n\n@mixin _navigation-scheme-nav($legacy: false) {\n  #{ns(nav)} {\n    &__link,\n    &__btn {\n      @include scheme-element-text-color(action-high neutral, $legacy);\n\n      &[aria-current] {\n        @include scheme-element-text-color(active blue-france, $legacy);\n        @include before {\n          @include scheme-element-bg-color(active blue-france, $legacy);\n        }\n      }\n    }\n\n    &__btn {\n      &[aria-expanded=\"true\"] {\n        @include respond-from(lg) {\n          @include scheme-element-text-color(active blue-france, $legacy);\n          @include scheme-element-bg-color(open blue-france, $legacy);\n        }\n      }\n    }\n\n    @include list-item {\n      @include scheme-element-box-shadow-color(default neutral, $legacy, false, bottom-1-in);\n      @include scheme-element-no-box-shadow(lg);\n    }\n  }\n}\n","////\n/// Navigation Scheme : Mega menu\n/// @group navigation\n////\n\n@mixin _navigation-scheme-mega-menu($legacy: false) {\n  #{ns(mega-menu)} {\n    @include scheme-element-bg-color(elevated neutral, $legacy);\n\n    > #{ns(container)} {\n      @include respond-from(lg) {\n        @include before {\n          @include scheme-element-bg-color(open blue-france, $legacy);\n        }\n      }\n    }\n\n    &__list {\n      @include scheme-element-box-shadow-color(default neutral, $legacy, false, bottom-1-out);\n      @include scheme-element-no-box-shadow(lg);\n    }\n\n    &__category {\n      @include respond-from(lg) {\n        @include scheme-element-box-shadow-color(default neutral, $legacy, false, 0 calc(4v + 1px) 0 -4v $COLOR);\n      }\n    }\n  }\n}\n","////\n/// Legacy Tool : legacy\n/// @group legacy\n////\n\n/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin legacy($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin not-legacy($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","////\n/// Navigation Scheme : Menu\n/// @group navigation\n////\n\n@mixin _navigation-scheme-menu($legacy: false) {\n  #{ns(menu)} {\n    @include respond-from(lg) {\n      @include after {\n        @include scheme-element-bg-color(elevated grey, $legacy);\n      }\n\n      #{ns(nav__link)} {\n        @include scheme-element-box-shadow-color(default grey, $legacy, false, 0 calc(-4v - 1px) 0 -4v $COLOR);\n      }\n    }\n  }\n}\n"]}