{"version":3,"sources":["<no source>","../../../../../../src/component/callout/style/_module.scss","../../../../../../src/core/style/typography/tool/_styles.scss","../../../../../../src/core/style/color/tool/_element.scss","../../../../../../src/core/style/spacing/tool/_space.scss","../../../../../../src/core/style/spacing/function/_space.scss","../../../../../../src/core/style/spacing/tool/_position.scss","../../../callout.css","../../../../../../src/core/style/selector/tool/_pattern.scss","../../../../../../src/core/style/selector/tool/_block.scss","../../../../../../src/core/style/selector/tool/_pseudo.scss","../../../../../../src/core/style/color/tool/_accent.scss","../../../../../../src/core/style/selector/tool/_breakpoint.scss","../../../../../../src/legacy/style/tool/_legacy.scss","../../../../../../src/component/callout/style/_scheme.scss"],"names":[],"mappings":"AAAA;;GAAA,ACKA,YC8FI,0BAA6B,CAA7B,gBAA6B,CC3D3B,6CAAQ,CAUV,gDAAU,CAAV,+DAAU,CCnBV,cC+DoB,CCxFtB,iBCSF,CCHY,uEPIR,aAAc,CGed,qBGLJ,CEpBE,mBN4CE,4BAAU,CD1BZ,kBAA6C,CAW3C,eAAiF,CARjF,mBKWJ,CNVE,kBCJA,kBAA6C,CAG3C,mBKuBJ,CN7CA,oBGsBM,eGkCN,CG7CE,mBPkCE,4BIqBJ,CIzDM,oCR0BA,+DAAQ,CAUV,kEAAU,CAAV,0EI+BJ,CInEM,4BR0BA,uDAAQ,CAUV,0DAAU,CAAV,kEIqCJ,CIzEM,4BR0BA,uDAAQ,CAUV,0DAAU,CAAV,kEI2CJ,CI/EM,0BR0BA,qDAAQ,CAUV,wDAAU,CAAV,gEIiDJ,CIrFM,4BR0BA,uDAAQ,CAUV,0DAAU,CAAV,kEIuDJ,CI3FM,wBR0BA,mDAAQ,CAUV,sDAAU,CAAV,8DI6DJ,CIjGM,0BR0BA,qDAAQ,CAUV,wDAAU,CAAV,gEImEJ,CIvGM,4BR0BA,uDAAQ,CAUV,0DAAU,CAAV,kEIyEJ,CI7GM,0BR0BA,qDAAQ,CAUV,wDAAU,CAAV,gEI+EJ,CInHM,wBR0BA,mDAAQ,CAUV,sDAAU,CAAV,8DIqFJ,CIzHM,8BR0BA,yDAAQ,CAUV,4DAAU,CAAV,oEI2FJ,CI/HM,6BR0BA,wDAAQ,CAUV,2DAAU,CAAV,mEIiGJ,CIrIM,iCR0BA,4DAAQ,CAUV,+DAAU,CAAV,uEIuGJ,CI3IM,8BR0BA,yDAAQ,CAUV,4DAAU,CAAV,oEI6GJ,CIjJM,2BR0BA,sDAAQ,CAUV,yDAAU,CAAV,iEImHJ,CIvJM,yBR0BA,oDAAQ,CAUV,uDAAU,CAAV,+DIyHJ,CI7JM,8BR0BA,yDAAQ,CAUV,4DAAU,CAAV,oEI+HJ,CK/JI,wBXbJ,YG0BI,iBGXF,CCRU,uEJmBR,yBGAF,CEzBA,mBPkBA,gBAA6C,CAG3C,gBKiBF,CNhBA,kBCJA,iBAA6C,CAG3C,gBK6BF,CAnCF,CMPI,2DCRF,YXwCI,qBAAU,CAAV,oCAAU,CIwId,CEhLA,sCNwCI,aI0JJ,CI1LI,oCRgCA,wBAAU,CAAV,qCIgKJ,CIhMI,4BRgCA,wBAAU,CAAV,qCI4KJ,CI5MI,4BRgCA,wBAAU,CAAV,qCIwLJ,CIxNI,0BRgCA,wBAAU,CAAV,qCIoMJ,CIpOI,4BRgCA,wBAAU,CAAV,qCIgNJ,CIhPI,wBRgCA,wBAAU,CAAV,qCI4NJ,CI5PI,0BRgCA,wBAAU,CAAV,qCIwOJ,CIxQI,4BRgCA,wBAAU,CAAV,qCIoPJ,CIpRI,0BRgCA,wBAAU,CAAV,qCIgQJ,CIhSI,wBRgCA,wBAAU,CAAV,qCI4QJ,CI5SI,8BRgCA,wBAAU,CAAV,qCIwRJ,CIxTI,6BRgCA,wBAAU,CAAV,qCIoSJ,CIpUI,iCRgCA,wBAAU,CAAV,qCIgTJ,CIhVI,8BRgCA,wBAAU,CAAV,qCI4TJ,CI5VI,2BRgCA,wBAAU,CAAV,qCIwUJ,CIxWI,yBRgCA,wBAAU,CAAV,qCIoVJ,CIpXI,8BRgCA,wBAAU,CAAV,qCIgWJ,CAvNF","file":"callout.min.css","sourcesContent":[null,"////\n/// Callout Module\n/// @group callout\n////\n\n#{ns(callout)} {\n  @include relative();\n  @include padding(6v);\n  @include padding(8v 12v, md);\n  @include set-title-margin(0 0 2v);\n  @include set-text-margin(0);\n\n  /**\n   * Inclusion de l'icône (optionnel)\n   */\n  @include with-icon {\n    display: block;\n    @include margin(-2v 0 2v);\n\n    @include respond-from(md) {\n      @include margin(-4v 0 4v -8v);\n    }\n  }\n\n  @include title() {\n    @include title-style(h4);\n  }\n\n  &__text {\n    @include text-style(lg);\n  }\n\n  /**\n   * Ajout de marge quand on inclut un bouton (optionnel)\n   */\n  #{ns(btn)} {\n    @include margin-top(4v);\n  }\n}\n","////\n/// Core Tool : Typography build\n/// @group core\n////\n\n@function get-text-style($font-size) {\n  @return map-get($text-styles, $font-size);\n}\n\n@function get-title-style($font-size) {\n  @return map-get($title-styles, $font-size);\n}\n\n@mixin _stylize($font-size, $styles, $prepend, $append) {\n  $style: map-get($styles, $font-size);\n\n  @if $prepend == null {\n    $prepend: '';\n  }\n\n  @if $append == null {\n    $append: '';\n  }\n\n  font-size: #{$prepend} #{px-rem($font-size)} #{$append};\n\n  @if map-has-key($style, line-height) {\n    line-height: #{$prepend} space(map-get($style, line-height)) #{$append};\n  }\n}\n\n@mixin _responsive-styles($settings, $styles, $is-responsive, $prepend, $append) {\n  $breakpoints: map-get($settings, breakpoints);\n\n  @if map-has-key($settings, weight) {\n    font-weight: #{$prepend} map-get($font-weight-scale, map-get($settings, weight)) #{$append};\n  }\n\n  @if $is-responsive {\n    @each $breakpoint, $size in $breakpoints {\n      @if $breakpoint == first {\n        @include _stylize($size, $styles, $prepend, $append);\n      }\n      @else {\n        @include respond-from($breakpoint) {\n          @include _stylize($size, $styles, $prepend, $append);\n        }\n      }\n    }\n  }\n  @else {\n    @if map-has-key($breakpoints, md) {\n      @include _stylize(map-get($breakpoints, md), $styles);\n    }\n    @else {\n      @include _stylize(map-get($breakpoints, first), $styles);\n    }\n  }\n}\n\n@mixin _space-text($settings) {\n  @include margin( var(#{'--' + map-get($settings, 'margin') + '-spacing'}) );\n}\n\n@mixin text-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($text-settings, $name);\n  $append: '';\n  @if $important {\n    $append: ' !important';\n  }\n\n  @include _responsive-styles($settings, $text-styles, $is-responsive, $prepend, $append);\n\n  @if $with-spacing {\n    @include _space-text($settings);\n  }\n}\n\n@mixin title-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($title-settings, $name);\n  $append: '';\n  @if $important {\n    $append: ' !important';\n  }\n\n  @include _responsive-styles($settings, $title-styles, $is-responsive, $prepend, $append);\n\n  @if $with-spacing {\n    @include _space-text($settings);\n  }\n}\n\n@mixin _set-typography-var($name, $value, $bp: null) {\n  @if $bp != null {\n    @include respond-from(#{$bp}) {\n      --#{$name}-spacing: #{space($value)};\n    }\n  }\n  @else {\n    --#{$name}-spacing: #{space($value)};\n  }\n}\n\n@mixin set-title-margin($margin, $bp:null) {\n  @include _set-typography-var(title, $margin, $bp);\n}\n\n@mixin set-text-margin($margin, $bp:null) {\n  @include _set-typography-var(text, $margin, $bp);\n}\n\n@mixin set-display-margin($margin, $bp:null) {\n  @include _set-typography-var(display, $margin, $bp);\n}\n","////\n/// Core Color Tools : Element\n/// @group core\n////\n\n$ACCENT: none;\n\n@mixin _scheme-element($prop, $part, $decisions, $legacy: false, $important: false, $value: $COLOR, $hover: false) {\n  $result: str-replace($value, '$COLOR', '$color#1');\n  $length: length($decisions) / 2;\n  @for $i from 1 through $length {\n    $token: nth($decisions, $i * 2 - 1);\n    $tint: nth($decisions, $i * 2);\n    @if $tint == accent {\n      $tint: $ACCENT;\n    }\n    $needle: '$color#1';\n    @if length($decisions) > 2 {\n      $needle: '$color##{$i}';\n    }\n    $part-token: _get-part-token($part, $token);\n    $p: map-get($part-token, part);\n    $token: map-get($part-token, token);\n\n    @if $tint == neutral {\n      $tint: _get-neutral-tint($p, $token);\n    }\n    $color: _get-value($p, $token, $tint, $legacy);\n    $result: _replace_color($result, $color, $needle);\n\n    @if $important {\n      $result: #{$result} !important;\n    }\n\n    @if $hover and $part == background and $p == background and $legacy == false {\n      $blend: var(#{_get-decision-prop($part, $token, $tint)}-blend);\n      @if $important {\n        $blend: #{$blend} !important;\n      }\n\n      --blend: #{$blend};\n    }\n  }\n\n  @if $legacy {\n    @include legacy(ie11) {\n      #{$prop}: #{$result};\n    }\n  }\n  @else {\n    #{$prop}: #{$result};\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-bg-color($decisions, $legacy: false, $important: false) {\n  @include _scheme-element(background-color, background, $decisions, $legacy, $important, $COLOR, true);\n}\n\n@mixin scheme-element-bg-transparent($legacy: false, $hover: false) {\n  @if $legacy {\n    @include legacy(ie11) {\n      background-color: transparent;\n    }\n  }\n  @else {\n    background-color: transparent;\n    @if $hover {\n      --blend: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-bg-image-color($decisions, $legacy: false, $important: false, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: length($decisions) / 2;\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: unquote('$color##{$i}');\n      $transformed: append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include _scheme-element(background-image, background, $decisions, $legacy, $important, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-text-color($decisions, $legacy: false, $important: false) {\n  @include _scheme-element(color, text, $decisions, $legacy, $important);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-fill-color($decisions, $legacy: false, $important: false) {\n  @include _scheme-element(fill, background , $decisions, $legacy, $important);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de border\n/// @param {String} $side - le côté affecté. valeurs: top, right, bottom, left\n@mixin scheme-element-border-color($decisions, $legacy: false, $important: false, $value:1px solid $COLOR, $side:null) {\n  $prop:border;\n  @if $side != null {\n    $prop:border-#{$side};\n  }\n  @include _scheme-element($prop, border, $decisions, $legacy, $important, $value);\n}\n\n@mixin scheme-element-no-border($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    border: 0;\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin scheme-element-outline-color($decisions, $legacy: false, $important: false, $value:1px solid $COLOR) {\n  @include _scheme-element(outline, border, $decisions, $legacy, $important, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin scheme-element-box-shadow-color($decisions, $legacy: false, $important: false, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: length($decisions) / 2;\n  $i: 1;\n  @each $v in $value {\n    @if map-has-key($box-shadows, $v) {\n      $transformed: append($transformed, _get-box-shadow($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include _scheme-element(box-shadow, border, $decisions, $legacy, $important, space($value));\n}\n\n@mixin scheme-element-no-box-shadow($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    box-shadow: none;\n  }\n}\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n/// Set space property\n///\n/// @param {String} $property [\"margin\"] - propriété à appliquer à l'espacement `[\"margin\", \"padding\"]`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `[\"x\", \"y\", \"top\", \"right\", \"bottom\", \"left\"]`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing(\"margin\", 6v, \"bottom\");\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// Core Function : Spacing space\n/// @group core\n////\n\n/// Return space value from type map and convert to rem.\n///\n/// @param {Number} $value - valeur de l'espacement, permet de convertir cet espacement de v (4px) ou w (8px) en rem\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     margin-bottom: space(6v);\n///   }\n@function space($value) {\n  @if type-of($value) == list {\n    $list: ();\n    $separator: list-separator($value);\n    @each $v in $value {\n      $list: append($list, space($v), $separator);\n    }\n    @return $list;\n  }\n  @if type-of($value) == string {\n    $c: str-index($value, '(');\n    @if $c {\n      $b: null;\n      $n: 0;\n      $i: $c + 1;\n      $l: str-length($value);\n      @while $b == null and $i <= $l {\n        $char: str-slice($value, $i, $i);\n        @if $char == '(' {\n          $n: $n + 1;\n        }\n        @else if $char == ')' {\n          @if $n > 0 {\n            $n: $n - 1;\n          }\n          @else {\n            $b: $i;\n          }\n        }\n        $i: $i + 1;\n      }\n\n      $start: unquote('');\n      $middle: space(str-slice($value, $c + 1, $b - 1));\n      $end: unquote('');\n\n      @if $c > 1 {\n        $start: space(str-slice($value, 1, $c - 1));\n      }\n\n      $l: str-length($value);\n      @if $b < $l {\n        $end: space(str-slice($value, $b + 1, $l));\n      }\n\n      @return unquote('#{$start}(#{$middle})#{$end}');\n    }\n\n    @if str-index($value, ',') {\n      @return space(str-split($value, ','));\n    }\n\n    @if str-index($value, ' ') {\n      @return space(str-split($value, ' '));\n    }\n\n    $value: unquote($value);\n  }\n\n  @if $value == 0 {\n    @return $value;\n  }\n\n  @if length($value) > 1 {\n    $result: ();\n    @each $v in $value {\n      $result: append($result, space($v));\n    }\n    @return $result;\n  }\n\n  @if is-basic-unit($value) {\n    @return $value;\n  }\n\n  $v: quote($value);\n\n  $q: str-to-num(unquote(str_slice($v, 0, str_length($v) - 1)));\n  $unit: str_slice($v, str-length($v), str_length($v));\n\n  @if is-unit($value, v) {\n    @return $q * 0.25rem;\n  }\n  @else if is-unit($value, w) {\n    @return $q * 0.5rem;\n  }\n  @return $value;\n}\n","////\n/// Core Tool : Spacing position\n/// @group core\n////\n\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  position: #{$position};\n  @if $top != null {\n    top: #{space($top)};\n  }\n  @if $right != null {\n    right: #{space($right)};\n  }\n  @if $bottom != null {\n    bottom: #{space($bottom)};\n  }\n  @if $left != null {\n    left: #{space($left)};\n  }\n\n  @include size($width, $height);\n\n  @content;\n}\n\n@mixin relative($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(relative, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(absolute, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin fixed($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(fixed, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin sticky($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(sticky, $top, $right, $bottom, $left, $width, $height);\n}\n","@charset \"UTF-8\";\n/* ------------------------------------ *\\\n  CALLOUT\n\\* ------------------------------------ */\n.fr-callout {\n  position: relative;\n  padding: 1.5rem;\n  --title-spacing: 0 0 0.5rem;\n  --text-spacing: 0;\n  /**\n   * Inclusion de l'icône (optionnel)\n   */\n  /**\n   * Ajout de marge quand on inclut un bouton (optionnel)\n   */\n}\n\n@media (min-width: 48em) {\n  .fr-callout {\n    padding: 2rem 3rem;\n  }\n}\n\n.fr-callout[class^=\"fr-fi-\"]::before, .fr-callout[class*=\" fr-fi-\"]::before {\n  display: block;\n  margin: -0.5rem 0 0.5rem;\n}\n\n@media (min-width: 48em) {\n  .fr-callout[class^=\"fr-fi-\"]::before, .fr-callout[class*=\" fr-fi-\"]::before {\n    margin: -1rem 0 1rem -2rem;\n  }\n}\n\n.fr-callout__title {\n  font-weight:  700 ;\n  font-size:  1.375rem ;\n  line-height:  1.75rem ;\n}\n\n@media (min-width: 48em) {\n  .fr-callout__title {\n    font-size:  1.5rem ;\n    line-height:  2rem ;\n  }\n}\n\n.fr-callout__text {\n  font-size:  1.125rem ;\n  line-height:  1.75rem ;\n}\n\n@media (min-width: 48em) {\n  .fr-callout__text {\n    font-size:  1.25rem ;\n    line-height:  2rem ;\n  }\n}\n\n.fr-callout .fr-btn {\n  margin-top: 1rem;\n}\n\n.fr-callout {\n  --blend: var(--background-contrast-grey-blend);\n  background-color: var(--background-contrast-grey);\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-blue-france);\n}\n\n.fr-callout::before {\n  color: var(--text-title-grey);\n}\n\n.fr-callout__title {\n  color: var(--text-title-grey);\n}\n\n.fr-callout--green-tilleul-verveine {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-green-tilleul-verveine);\n  --blend: var(--background-contrast-green-tilleul-verveine-blend);\n  background-color: var(--background-contrast-green-tilleul-verveine);\n}\n\n.fr-callout--green-bourgeon {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-green-bourgeon);\n  --blend: var(--background-contrast-green-bourgeon-blend);\n  background-color: var(--background-contrast-green-bourgeon);\n}\n\n.fr-callout--green-emeraude {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-green-emeraude);\n  --blend: var(--background-contrast-green-emeraude-blend);\n  background-color: var(--background-contrast-green-emeraude);\n}\n\n.fr-callout--green-menthe {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-green-menthe);\n  --blend: var(--background-contrast-green-menthe-blend);\n  background-color: var(--background-contrast-green-menthe);\n}\n\n.fr-callout--green-archipel {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-green-archipel);\n  --blend: var(--background-contrast-green-archipel-blend);\n  background-color: var(--background-contrast-green-archipel);\n}\n\n.fr-callout--blue-ecume {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-blue-ecume);\n  --blend: var(--background-contrast-blue-ecume-blend);\n  background-color: var(--background-contrast-blue-ecume);\n}\n\n.fr-callout--blue-cumulus {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-blue-cumulus);\n  --blend: var(--background-contrast-blue-cumulus-blend);\n  background-color: var(--background-contrast-blue-cumulus);\n}\n\n.fr-callout--purple-glycine {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-purple-glycine);\n  --blend: var(--background-contrast-purple-glycine-blend);\n  background-color: var(--background-contrast-purple-glycine);\n}\n\n.fr-callout--pink-macaron {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-pink-macaron);\n  --blend: var(--background-contrast-pink-macaron-blend);\n  background-color: var(--background-contrast-pink-macaron);\n}\n\n.fr-callout--pink-tuile {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-pink-tuile);\n  --blend: var(--background-contrast-pink-tuile-blend);\n  background-color: var(--background-contrast-pink-tuile);\n}\n\n.fr-callout--yellow-tournesol {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-yellow-tournesol);\n  --blend: var(--background-contrast-yellow-tournesol-blend);\n  background-color: var(--background-contrast-yellow-tournesol);\n}\n\n.fr-callout--yellow-moutarde {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-yellow-moutarde);\n  --blend: var(--background-contrast-yellow-moutarde-blend);\n  background-color: var(--background-contrast-yellow-moutarde);\n}\n\n.fr-callout--orange-terre-battue {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-orange-terre-battue);\n  --blend: var(--background-contrast-orange-terre-battue-blend);\n  background-color: var(--background-contrast-orange-terre-battue);\n}\n\n.fr-callout--brown-cafe-creme {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-brown-cafe-creme);\n  --blend: var(--background-contrast-brown-cafe-creme-blend);\n  background-color: var(--background-contrast-brown-cafe-creme);\n}\n\n.fr-callout--brown-caramel {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-brown-caramel);\n  --blend: var(--background-contrast-brown-caramel-blend);\n  background-color: var(--background-contrast-brown-caramel);\n}\n\n.fr-callout--brown-opera {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-brown-opera);\n  --blend: var(--background-contrast-brown-opera-blend);\n  background-color: var(--background-contrast-brown-opera);\n}\n\n.fr-callout--beige-gris-galet {\n  box-shadow: inset 0.25rem 0 0 0 var(--border-default-beige-gris-galet);\n  --blend: var(--background-contrast-beige-gris-galet-blend);\n  background-color: var(--background-contrast-beige-gris-galet);\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout {\n    background-color: #eee;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout {\n    box-shadow: inset 0.25rem 0 0 0 #6a6af4;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout::before {\n    color: #161616;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout__title {\n    color: #161616;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--green-tilleul-verveine {\n    box-shadow: inset 0.25rem 0 0 0 #b7a73f;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--green-tilleul-verveine {\n    background-color: #fceeac;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--green-bourgeon {\n    box-shadow: inset 0.25rem 0 0 0 #68a532;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--green-bourgeon {\n    background-color: #c9fcac;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--green-emeraude {\n    box-shadow: inset 0.25rem 0 0 0 #00a95f;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--green-emeraude {\n    background-color: #c3fad5;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--green-menthe {\n    box-shadow: inset 0.25rem 0 0 0 #009081;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--green-menthe {\n    background-color: #bafaee;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--green-archipel {\n    box-shadow: inset 0.25rem 0 0 0 #009099;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--green-archipel {\n    background-color: #c7f6fc;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--blue-ecume {\n    box-shadow: inset 0.25rem 0 0 0 #465f9d;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--blue-ecume {\n    background-color: #e9edfe;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--blue-cumulus {\n    box-shadow: inset 0.25rem 0 0 0 #417dc4;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--blue-cumulus {\n    background-color: #e6eefe;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--purple-glycine {\n    box-shadow: inset 0.25rem 0 0 0 #a558a0;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--purple-glycine {\n    background-color: #fee7fc;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--pink-macaron {\n    box-shadow: inset 0.25rem 0 0 0 #e18b76;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--pink-macaron {\n    background-color: #fee9e6;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--pink-tuile {\n    box-shadow: inset 0.25rem 0 0 0 #ce614a;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--pink-tuile {\n    background-color: #fee9e7;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--yellow-tournesol {\n    box-shadow: inset 0.25rem 0 0 0 #c8aa39;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--yellow-tournesol {\n    background-color: #feecc2;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--yellow-moutarde {\n    box-shadow: inset 0.25rem 0 0 0 #c3992a;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--yellow-moutarde {\n    background-color: #feebd0;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--orange-terre-battue {\n    box-shadow: inset 0.25rem 0 0 0 #e4794a;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--orange-terre-battue {\n    background-color: #fee9e5;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--brown-cafe-creme {\n    box-shadow: inset 0.25rem 0 0 0 #d1b781;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--brown-cafe-creme {\n    background-color: #f7ecdb;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--brown-caramel {\n    box-shadow: inset 0.25rem 0 0 0 #c08c65;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--brown-caramel {\n    background-color: #f7ebe5;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--brown-opera {\n    box-shadow: inset 0.25rem 0 0 0 #bd987a;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--brown-opera {\n    background-color: #f7ece4;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--beige-gris-galet {\n    box-shadow: inset 0.25rem 0 0 0 #aea397;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-callout--beige-gris-galet {\n    background-color: #f3ede5;\n  }\n}\n","////\n/// Core Tool : Selector pattern\n/// @group core\n////\n\n@mixin _class-pattern($selector, $unify: true) {\n  @if & == null {\n    @at-root #{$selector} {\n      @content;\n    }\n  }\n  @else if $unify {\n    @at-root #{selector-unify(&, $selector)} {\n      @content;\n    }\n  }\n  @else {\n    #{$selector} {\n      @content;\n    }\n  }\n}\n\n@mixin class-contains($unify: true, $patterns...) {\n\n  @if length($patterns) == 1 and length(nth($patterns, 1)) > 1 {\n    $patterns: nth($patterns, 1);\n  }\n\n  $selectors: '';\n\n  @each $pattern in $patterns {\n    $selectors: '#{$selectors}[class*=\"#{$pattern}\"]';\n  }\n\n  @include _class-pattern($selectors, $unify) {\n    @content;\n  }\n}\n\n@mixin class-not-contains($unify: true, $patterns...) {\n\n  @if length($patterns) == 1 and length(nth($patterns, 1)) > 1 {\n    $patterns: nth($patterns, 1);\n  }\n\n  $selectors: '';\n  @each $pattern in $patterns {\n    $selectors: '#{$selectors}:not([class*=\"#{$pattern}\"])';\n  }\n\n  @include _class-pattern($selectors, $unify) {\n    @content;\n  }\n}\n\n@mixin class-start-with($start, $unify: true) {\n  @include _class-pattern(class-start-with($start), $unify) {\n    @content;\n  }\n}\n\n@mixin class-not-start-with($start, $unify: true) {\n  @include _class-pattern(class-not-start-with($start), $unify) {\n    @content;\n  }\n}\n\n@mixin class-end-with($end, $unify: true) {\n  @include _class-pattern(class-end-with($end), $unify) {\n    @content;\n  }\n}\n\n@mixin class-not-end-with($end, $unify: true) {\n  @include _class-pattern(class-not-end-with($end), $unify) {\n    @content;\n  }\n}\n\n@mixin class-is-ns($unify: true) {\n  @include class-start-with(ns('', ''), $unify) {\n    @content;\n  }\n}\n\n@mixin class-is-not-ns($unify: true) {\n  @include class-not-start-with(ns('', ''), $unify) {\n    @content;\n  }\n}\n","////\n/// Core Tool : Selector block\n/// @group core\n////\n\n@mixin title() {\n  &__title {\n    @content;\n  }\n}\n\n@mixin body() {\n  &__body {\n    @content;\n  }\n}\n\n@mixin list() {\n  &__list {\n    @content;\n  }\n}\n\n@mixin list-item() {\n  &__item {\n    @content;\n  }\n}\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","////\n/// Core Tools : Color accent\n/// @group schemes\n////\n\n@mixin accent-modifiers () {\n  $tints: ();\n  $accent: map-get($scheme-sets, accent);\n  @each $tint, $value in $accent {\n    $tints: append($tints, $tint);\n  }\n\n  @at-root {\n    @each $tint in $tints {\n      &--#{$tint} {\n        $ACCENT: #{$tint} !global;\n        @content;\n      }\n    }\n    $ACCENT: none !global;\n  }\n}\n","////\n/// Core Tool : Selector Breakpoint\n/// @group core\n////\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `[\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `[\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-to(md) {\n///     }\n///   }\n@mixin respond-to($media) {\n\n  @debug 'afin de rester mobile first, n‘utiliser la mixin respond-to uniquement s‘il n‘y a pas d‘autre alternative, lui préférer systématiquement la mixin respond-from';\n\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null and length($limits) == 2 {\n    @media (max-width: nth($limits, 2)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","////\n/// Legacy Tool : legacy\n/// @group legacy\n////\n\n/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin legacy($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin not-legacy($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","////\n/// Callout Scheme\n/// @group callout\n////\n\n@mixin _callout-scheme($legacy: false) {\n  #{ns(callout)} {\n    @include scheme-element-bg-color(contrast neutral, $legacy);\n    @include scheme-element-box-shadow-color(default blue-france, $legacy, false, left-1v-in);\n\n    @include before {\n      @include scheme-element-text-color(title neutral, $legacy);\n    }\n\n    @include title {\n      @include scheme-element-text-color(title neutral, $legacy);\n    }\n\n    @include accent-modifiers {\n      @include scheme-element-box-shadow-color(default accent, $legacy, false, left-1v-in);\n      @include scheme-element-bg-color(contrast accent, $legacy);\n    }\n  }\n}\n"]}