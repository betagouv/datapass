/*! DSFR v1.2.1 | SPDX-License-Identifier: MIT | License-Filename: LICENSE.md | restricted use (see terms and conditions) */
const t=window.dsfr;class s extends t.core.DisclosureButton{constructor(){super(t.core.DisclosureType.SELECT)}static get instanceClassName(){return"TabButton"}apply(t){super.apply(t),this.isPrimary&&this.setAttribute("tabindex",t?"0":"-1")}}const e={TAB:t.ns.selector("tabs__tab"),GROUP:t.ns.selector("tabs"),PANEL:t.ns.selector("tabs__panel"),LIST:t.ns.selector("tabs__list")};class i extends t.core.Disclosure{constructor(){super(t.core.DisclosureType.SELECT,e.PANEL,s,"TabsGroup")}static get instanceClassName(){return"TabPanel"}translate(t,s){this.style.transition=s?"none":"",this.style.transform=`translate(${100*t}%)`}reset(){this.group.index=0}}class n extends t.core.DisclosuresGroup{constructor(){super("TabPanel")}static get instanceClassName(){return"TabsGroup"}init(){super.init(),this.list=this.querySelector(e.LIST),this.listen("transitionend",this.transitionend.bind(this)),this.listenKey(t.core.KeyCodes.RIGHT,this.pressRight.bind(this),!0,!0),this.listenKey(t.core.KeyCodes.LEFT,this.pressLeft.bind(this),!0,!0),this.listenKey(t.core.KeyCodes.HOME,this.pressHome.bind(this),!0,!0),this.listenKey(t.core.KeyCodes.END,this.pressEnd.bind(this),!0,!0),this.isRendering=!0}transitionend(t){this.style.transition="none"}get buttonHasFocus(){return this.members.some((t=>t.buttonHasFocus))}pressRight(){this.buttonHasFocus&&(this.index<this.length-1?this.index++:this.index=0,this.focus())}pressLeft(){this.buttonHasFocus&&(this.index>0?this.index--:this.index=this.length-1,this.focus())}pressHome(){this.buttonHasFocus&&(this.index=0,this.focus())}pressEnd(){this.buttonHasFocus&&(this.index=this.length-1,this.focus())}focus(){this.current&&this.current.focus()}apply(){for(let t=0;t<this._index;t++)this.members[t].translate(-1);this.current.style.transition="",this.current.style.transform="";for(let t=this._index+1;t<this.length;t++)this.members[t].translate(1);this.style.transition=""}render(){if(null===this.current)return;const t=Math.round(this.current.node.offsetHeight);this.panelHeight!==t&&(this.panelHeight=t,this.style.height=this.panelHeight+this.list.offsetHeight+"px")}}t.tab={TabPanel:i,TabButton:s,TabsGroup:n,TabSelector:e},t.register(t.tab.TabSelector.PANEL,t.tab.TabPanel),t.register(t.tab.TabSelector.GROUP,t.tab.TabsGroup);
//# sourceMappingURL=tab.module.min.js.map
