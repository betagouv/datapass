{"version":3,"sources":["../../../../../../src/core/style/selector/tool/_pseudo.scss","../../../sidemenu.main.css","<no source>","../../../../../../src/component/sidemenu/style/_module.scss","../../../../../../src/core/style/reset/tool/_list.scss","../../../../../../src/core/style/reset/tool/_link.scss","../../../../../../src/core/style/typography/tool/_styles.scss","../../../../../../src/core/style/color/tool/_shadow.scss","../../../../../../src/core/style/color/setting/_shadow.scss","../../../../../../src/core/style/spacing/tool/_space.scss","../../../../../../src/core/style/spacing/function/_space.scss","../../../../../../src/core/style/spacing/tool/_position.scss","../../../../../../src/core/style/selector/tool/_block.scss","../../../../../../src/core/style/color/tool/_element.scss","../../../../../../src/component/sidemenu/style/module/_title.scss","../../../../../../src/core/style/typography/setting/_font-weight.scss","../../../../../../src/component/sidemenu/style/module/_list.scss","../../../../../../src/component/sidemenu/style/module/_inner.scss","../../../../../../src/core/style/action/tool/_hover.scss","../../../../../../src/core/style/display/tool/_display.scss","../../../../../../src/component/sidemenu/style/module/_action.scss","../../../../../../src/core/style/spacing/tool/_size.scss","../../../../../../src/core/style/icon/_tool.scss","../../../../../../src/component/sidemenu/style/_scheme.scss","../../../../../../src/core/style/selector/tool/_breakpoint.scss","../../../../../../src/component/sidemenu/style/module/_variants.scss"],"names":[],"mappings":"AAgBE,gBCyRF;ACzSA;;GAAA,ACKA,aCoBE,cAAU,CACV,cAAU,CACV,YAAW,CACX,YAAW,CACX,YAAW,CACX,aAAY,CACZ,iBAAa,CCdb,qBAAiB,CACjB,sBAAkB,CAClB,yBAAqB,CCgFnB,gBAA6B,CAA7B,iBAA6B,CC7F/B,sECCyE,CCYrE,iBC2EkB,CD1ElB,kBC0EkB,CCxFtB,iBVgCF,CEjCA,2BAUI,cF2BJ,CWpCE,oBC4CE,sDAAU,CAAV,4BAAU,CP1BZ,kBAA6C,CQb7C,eCHS,CTmBP,mBAA6D,CGI7D,cRmDJ,CWhEE,mBIZA,efmGF,CWvFG,sCIPC,eDJU,CNwBV,qBR+EJ,CW5FG,iHNMD,cAA6C,CUTzC,eDRQ,CToBV,kBLgGJ,CWzGG,uJNMD,iBAA6C,CAG3C,kBLsGJ,CWzGE,mBC0BE,sDAAU,CF5CZ,iBV4IF,CDlIE,0BAGI,YCmIN,CgBjJC,iCR0BG,aRwIJ,CElKA,+DeyDE,sBAAkB,CC3ChB,kBAAa,CNoJb,eAAgB,CM5JhB,YAAa,CAIb,kBAAgB,CbSlB,cAA6C,CcN7C,eLVS,CTmBP,kBAA6D,CGI7D,oBC+DoB,CCxFtB,iBAAU,CSWV,eAAgB,CCuCZ,UpBqMN,CD7OE,uGWFE,aAAQ,CXKN,UoBIe,CTNjB,MAAM,CAXR,iBAAU,CAER,UAAK,CUgDH,SpBsNN,CEzQA,8CgBcI,kBAAa,CARb,YAAa,CAIb,0BlB4QJ,CD3QE,qDsBmCA,WALU,CAaV,0CAJ0E,Cb5BtE,gBWcyB,CXdzB,cWeuB,CACvB,wBnB8PN,CEpSA,mDUkKI,eZ4IJ,CDnSE,0DoBoCI,yBnBmQN,CElTA,mDiB2DE,eAAmB,CCRf,UpBuQN,CD/SE,0DSWI,iBRwSN,CDnTE,yDsBmCA,WALU,CAaV,0CAJ0E,CbpCtE,iBC2EkB,CD1ElB,kBRsTN,CWlTG,gDC0BC,sDZiUJ,CsB9TI,qCVHA,kCZ0VJ,CsBvVK,iEVHD,oCZ8VJ,CDhYE,6EakCE,iDZkWJ,CsBlVc,sCV1BR,4CAAQ,CAUV,+CZuWJ,CuBvYI,wBrBbJ,aUkKI,eAAgB,CJpJd,aNAe,CMCf,cNDe,CMQf,iBCmEkB,CT/CtB,CE1CF,0BMcM,gBNIoB,CMHpB,iBNGoB,CMJpB,gBNKoB,CMJpB,gBNIoB,CF2CxB,CW7DA,oBCiKE,eAAgB,CP/IlB,iBAA6C,CAG3C,gBAA6D,CGI7D,iBC+DoB,CD/DpB,QKjBgB,Cb0ElB,CWtEC,sCHaC,aRoFF,CWjGC,uJHaC,oBRwGF,CWrHA,mBHaE,QR8GF,CgBxIF,oBJ6CI,sDAAU,CJnBV,uBRmIF,CgB7JD,iCR0BG,QQjBiB,CAIf,eAAgB,CADhB,eAAiB,ChB2JrB,CD5JA,wCiBKM,YhBiKN,CgBjLD,6DAoBO,kBhBgKN,CwB5KA,oBhBcI,iBCmEkB,CDnElB,eRoLJ,CwBlMC,wCAMG,cAAe,CZ+BjB,qDAAU,CJnBV,qBRoLF,CwBjLA,sDJyBI,YAAQ,CIvBV,aAAc,Cd9BhB,eAAU,CAER,KVuNF,CwB7LC,qDJyBG,YAAQ,CIpBR,axB4LJ,CwBpLC,8ChBpBG,gBR2MJ,CEjOF,+DM0BI,QWjBe,CC0Cb,SAAO,CpB2MX,CE9PF,8CM0BI,gCRiQF,CDhRA,qDSWI,oBRmRJ,CEzSF,mDiBwEI,YnBkQF,CWvTC,mEC+IC,eZiNF,CsB1UK,8CVIH,qDZqVF,CAvVF,CuB9BI,6CC6BD,8ChBhBC,gBR6MF,CACF","file":"sidemenu.main.min.css","sourcesContent":["////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","@charset \"UTF-8\";\n/* ------------------------------------ *\\\n  SIDEMENU\n\\* ------------------------------------ */\n.fr-sidemenu {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n  --link-underline: none;\n  --link-blank-font: none;\n  --link-blank-content: none;\n  --text-spacing: 0;\n  --title-spacing: 0;\n  position: relative;\n  box-shadow: 0 8px 8px 0 rgba(0, 0, 0, 0.1), 0 8px 16px -16px rgba(0, 0, 0, 0.32);\n  margin-left: -1rem;\n  margin-right: -1rem;\n  /**\n* Titre facultatif\n */\n  /**\n * Variantes du sidemenu proposées juste à partir du breakpoint md\n */\n  /**\n * Styles du bouton et du lien d'accès direct du sidemnu\n */\n  /**\n * Style du bouton du sidemnenu pour ouvrir/refermer les listes de niveaux 1 et 2\n * Bouton pour la version mobile pour ouvrir/refermer le sidemenu\n */\n  /**\n * Modificateur pour le bouton en version mobile permettant d'ouvrir/refermer le sidemenu\n * L'icône de gauche est défini dans _sidemenu.scss (provisoire)\n */\n}\n\n.fr-sidemenu a:not([href]) {\n  cursor: default;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu {\n    box-shadow: none;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu {\n    margin-left: 0;\n    margin-right: 0;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu {\n    padding-right: 2rem;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu .fr-collapse {\n    margin-left: -4px;\n    margin-right: -4px;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu .fr-collapse {\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n}\n\n.fr-sidemenu__title {\n  padding: 1rem 0;\n  font-size:  1.125rem ;\n  line-height:  1.75rem ;\n  font-weight: 700;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__title {\n    font-size:  1.25rem ;\n    line-height:  2rem ;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__title {\n    margin: 0 0 1.5rem;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__title {\n    padding: 0;\n  }\n}\n\n.fr-sidemenu__list {\n  font-weight: 700;\n}\n\n.fr-sidemenu__list .fr-sidemenu__list {\n  margin: 0 0.5rem 1.5rem;\n  font-weight: 400;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__list .fr-sidemenu__list {\n    margin: 0 1rem;\n  }\n}\n\n.fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__link,\n.fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__btn {\n  font-size:  1rem ;\n  line-height:  1.5rem ;\n  font-weight: 400;\n}\n\n.fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__link,\n.fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__btn {\n  font-size:  0.875rem ;\n  line-height:  1.5rem ;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__link,\n  .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__btn {\n    padding: 0.75rem 0.5rem;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__list {\n    margin: 0;\n  }\n}\n\n.fr-sidemenu__item {\n  position: relative;\n}\n\n.fr-sidemenu__item::before {\n  content: none;\n}\n\n.fr-sidemenu__inner {\n  /**\n  * Ce wrapper ne sert que pour la version mobile\n  * On l'utilise pour l'ouverture/fermeture du sidemenu entier\n  */\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner {\n    padding: 0 2rem 0 0.25rem;\n  }\n}\n\n.fr-sidemenu__inner > .fr-collapse {\n  margin: 0 1rem;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner > .fr-collapse {\n    margin: 0;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner > .fr-collapse {\n    overflow: initial;\n    max-height: none;\n  }\n  .fr-sidemenu__inner > .fr-collapse::before {\n    display: none;\n  }\n  .fr-sidemenu__inner > .fr-collapse:not(.fr-collapse--expanded) {\n    visibility: inherit;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu {\n    /**\n   * Modificateur pour que le sidemenu s'adapte à un affichage à droite du contenu\n   * La bordure se met sur la gauche\n   */\n    /**\n   * Modificateur pour que le sidemenu soit sticky\n   */\n    /**\n   * Modificateur pour que le sidemenu soit à la fois sticky et prenne toute la hauteur de la page\n   */\n    /**\n   * Modificateur pour avoir une bordure tout autour du sidemenu\n   */\n  }\n  .fr-sidemenu--right {\n    padding-left: 2rem;\n    padding-right: 0;\n  }\n  .fr-sidemenu--right .fr-sidemenu__inner {\n    padding: 0 1rem 0 2rem;\n    border-right: 0;\n  }\n  .fr-sidemenu--sticky {\n    position: sticky;\n    top: 0;\n    height: 100vh;\n    overflow: auto;\n  }\n  .fr-sidemenu--sticky-full-height {\n    position: sticky;\n    top: 0;\n    height: 100vh;\n    overflow: auto;\n  }\n  .fr-sidemenu--sticky-full-height .fr-sidemenu__inner {\n    overflow: auto;\n    height: 100vh;\n  }\n  .fr-sidemenu--full-border .fr-sidemenu__title {\n    margin-top: 0.5rem;\n  }\n}\n\n@media (min-width: 48em) and (min-width: 48em) {\n  .fr-sidemenu--full-border .fr-sidemenu__inner {\n    padding: 0 0.25rem 0 0.25rem;\n  }\n}\n\n.fr-sidemenu .fr-sidemenu__link,\n.fr-sidemenu .fr-sidemenu__btn {\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  padding: 0.75rem 0.5rem;\n  font-size:  1rem ;\n  line-height:  1.5rem ;\n  box-shadow: none;\n  text-align: left;\n  font-weight: 700;\n  --blend-full-size: 100%;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu .fr-sidemenu__link,\n  .fr-sidemenu .fr-sidemenu__btn {\n    margin: 0;\n  }\n}\n\n.fr-sidemenu .fr-sidemenu__link[aria-current]::after,\n.fr-sidemenu .fr-sidemenu__btn[aria-current]::after {\n  content: \"\";\n  position: absolute;\n  top: 0.75rem;\n  bottom: 0.75rem;\n  left: 0;\n  width: 2px;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu .fr-sidemenu__link,\n  .fr-sidemenu .fr-sidemenu__btn {\n    width: 100%;\n  }\n}\n\n.fr-sidemenu .fr-sidemenu__btn[aria-expanded] {\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu .fr-sidemenu__btn[aria-expanded] {\n    padding: 0.75rem 2rem 0.75rem 0.5rem;\n  }\n}\n\n.fr-sidemenu .fr-sidemenu__btn[aria-expanded]::before {\n  font: normal normal normal 1rem/1 dsfr-icon;\n  content: \"\";\n  margin-left: auto;\n  margin-right: 0;\n  transition: transform 0.3s;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu .fr-sidemenu__btn[aria-expanded]::before {\n    margin-right: -1.5rem;\n  }\n}\n\n.fr-sidemenu .fr-sidemenu__btn[aria-expanded=\"true\"] {\n  box-shadow: none;\n}\n\n.fr-sidemenu .fr-sidemenu__btn[aria-expanded=\"true\"]::before {\n  transform: rotate(-180deg);\n}\n\n.fr-sidemenu .fr-sidemenu__inner > .fr-sidemenu__btn {\n  width: 100%;\n  font-weight: normal;\n  /**\n  * Ajout de l'icône de menu en mode mobile (provisoire)\n  */\n}\n\n.fr-sidemenu .fr-sidemenu__inner > .fr-sidemenu__btn::before {\n  margin-right: 1rem;\n}\n\n.fr-sidemenu .fr-sidemenu__inner > .fr-sidemenu__btn::after {\n  font: normal normal normal 1rem/1 dsfr-icon;\n  content: \"\";\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu .fr-sidemenu__inner > .fr-sidemenu__btn {\n    display: none;\n  }\n}\n\n.fr-sidemenu {\n  /*\n    @include scheme-element-bg-color(default grey);\n\n    @include respond-from(md) {\n      @include scheme-element-bg-transparent($legacy, true);\n    }\n    */\n}\n\n.fr-sidemenu__title {\n  color: var(--text-title-grey);\n  box-shadow: inset 0 -1px 0 0 var(--border-default-grey);\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__title {\n    box-shadow: none;\n  }\n}\n\n.fr-sidemenu__item {\n  box-shadow: inset 0 -1px 0 0 var(--border-default-grey);\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__item {\n    box-shadow: none;\n  }\n}\n\n.fr-sidemenu__item:last-child .fr-sidemenu__btn {\n  box-shadow: inset 0 -1px 0 0 var(--border-default-grey);\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__item:last-child .fr-sidemenu__btn {\n    box-shadow: none;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner {\n    box-shadow: inset -1px 0 0 0 var(--border-default-grey);\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu--right .fr-sidemenu__inner {\n    box-shadow: inset 1px 0 0 0 var(--border-default-grey);\n  }\n  .fr-sidemenu--full-border .fr-sidemenu__inner {\n    box-shadow: inset 0 0 0 1px var(--border-default-grey);\n  }\n}\n\n.fr-sidemenu__link, .fr-sidemenu__btn {\n  color: var(--text-action-high-grey);\n}\n\n.fr-sidemenu__link[aria-current], .fr-sidemenu__btn[aria-current] {\n  color: var(--text-active-blue-france);\n}\n\n.fr-sidemenu__link[aria-current]::after, .fr-sidemenu__btn[aria-current]::after {\n  background-color: var(--border-active-blue-france);\n}\n\n.fr-sidemenu__inner > .fr-sidemenu__btn {\n  --blend: var(--background-default-grey-blend);\n  background-color: var(--background-default-grey);\n}\n",null,"////\n/// Sidemenu Module\n/// @group sidemenu\n////\n\n#{ns(sidemenu)} {\n  @include disable-list-style;\n  @include disable-link-style;\n  @include set-text-margin(0);\n  @include set-title-margin(0);\n  @include relative;\n  @include shadow(md);\n  @include margin-x(-4v);\n\n  a:not([href]) {\n    cursor: default;\n  }\n\n  @include scheme-element-no-box-shadow(md);\n  @include margin-x(0, md);\n  @include padding-right(8v, md);\n\n  #{ns(collapse)} {\n    @include margin-x(-4px, md);\n    @include padding-x(4px, md);\n  }\n\n  @import 'module/title';\n  @import 'module/list';\n  @import 'module/inner';\n  @import 'module/variants';\n  @import 'module/action';\n}\n","////\n/// Core Tool : Reset list\n/// @group core\n////\n\n@mixin enable-list-style() {\n  $selector: null;\n\n  @if & == null {\n    $selector: ':root';\n  }\n\n  @include nest($selector) {\n    --ul-type: \"●\\00a0\\00a0\";\n    --ol-type: decimal;\n    --ul-start: #{space(4v)};\n    --ol-start: #{space(6v)};\n    --xl-block: #{space(2v)};\n    --li-bottom: #{space(1v)};\n    --xl-base: 1em;\n    --ol-content: counters(li-counter, \".\") \".\\00a0\\00a0\";\n  }\n}\n\n@mixin disable-list-style() {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n}\n","////\n/// Core Tool : Reset\n/// @group core\n////\n\n@mixin a-reset {\n  text-decoration: none;\n  color: inherit;\n}\n\n@mixin enable-link-style() {\n  --link-underline: 0 1px 0 0 currentColor;\n  --link-blank-font: #{font-icon(sm)};\n  --link-blank-content: \"\\00a0#{icon-glyph(external-link-line)}\";\n}\n\n@mixin disable-link-style() {\n  --link-underline: none;\n  --link-blank-font: none;\n  --link-blank-content: none;\n}\n\n@mixin link-underline() {\n  box-shadow: var(--link-underline);\n}\n\n@mixin link-blank() {\n  @include after(var(--link-blank-content)) {\n    font: var(--link-blank-font);\n  }\n}\n","////\n/// Core Tool : Typography build\n/// @group core\n////\n\n@function get-text-style($font-size) {\n  @return map-get($text-styles, $font-size);\n}\n\n@function get-title-style($font-size) {\n  @return map-get($title-styles, $font-size);\n}\n\n@mixin _stylize($font-size, $styles, $prepend, $append) {\n  $style: map-get($styles, $font-size);\n\n  @if $prepend == null {\n    $prepend: '';\n  }\n\n  @if $append == null {\n    $append: '';\n  }\n\n  font-size: #{$prepend} #{px-rem($font-size)} #{$append};\n\n  @if map-has-key($style, line-height) {\n    line-height: #{$prepend} space(map-get($style, line-height)) #{$append};\n  }\n}\n\n@mixin _responsive-styles($settings, $styles, $is-responsive, $prepend, $append) {\n  $breakpoints: map-get($settings, breakpoints);\n\n  @if map-has-key($settings, weight) {\n    font-weight: #{$prepend} map-get($font-weight-scale, map-get($settings, weight)) #{$append};\n  }\n\n  @if $is-responsive {\n    @each $breakpoint, $size in $breakpoints {\n      @if $breakpoint == first {\n        @include _stylize($size, $styles, $prepend, $append);\n      }\n      @else {\n        @include respond-from($breakpoint) {\n          @include _stylize($size, $styles, $prepend, $append);\n        }\n      }\n    }\n  }\n  @else {\n    @if map-has-key($breakpoints, md) {\n      @include _stylize(map-get($breakpoints, md), $styles);\n    }\n    @else {\n      @include _stylize(map-get($breakpoints, first), $styles);\n    }\n  }\n}\n\n@mixin _space-text($settings) {\n  @include margin( var(#{'--' + map-get($settings, 'margin') + '-spacing'}) );\n}\n\n@mixin text-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($text-settings, $name);\n  $append: '';\n  @if $important {\n    $append: ' !important';\n  }\n\n  @include _responsive-styles($settings, $text-styles, $is-responsive, $prepend, $append);\n\n  @if $with-spacing {\n    @include _space-text($settings);\n  }\n}\n\n@mixin title-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($title-settings, $name);\n  $append: '';\n  @if $important {\n    $append: ' !important';\n  }\n\n  @include _responsive-styles($settings, $title-styles, $is-responsive, $prepend, $append);\n\n  @if $with-spacing {\n    @include _space-text($settings);\n  }\n}\n\n@mixin _set-typography-var($name, $value, $bp: null) {\n  @if $bp != null {\n    @include respond-from(#{$bp}) {\n      --#{$name}-spacing: #{space($value)};\n    }\n  }\n  @else {\n    --#{$name}-spacing: #{space($value)};\n  }\n}\n\n@mixin set-title-margin($margin, $bp:null) {\n  @include _set-typography-var(title, $margin, $bp);\n}\n\n@mixin set-text-margin($margin, $bp:null) {\n  @include _set-typography-var(text, $margin, $bp);\n}\n\n@mixin set-display-margin($margin, $bp:null) {\n  @include _set-typography-var(display, $margin, $bp);\n}\n","////\n/// Core Tool : Color shadow\n/// @group core\n////\n\n@mixin shadow($type) {\n  box-shadow: map_get($shadows-settings, $type);\n}\n","////\n/// Core Setting : Color shadow\n/// @group core\n////\n\n$shadows-settings: (\n  sm: (0 1px 4px 0 rgba(0, 0, 0, 0.23), 0 2px 0 -2px rgba(0, 0, 0, 0.16), 0 1px 1px 0 rgba(0, 0, 0, 0.16)),\n  md: (0 8px 8px 0 rgba(0, 0, 0, 0.1), 0 8px 16px -16px rgba(0, 0, 0, 0.32)),\n  up: (0 -8px 8px 0 rgba(0, 0, 0, 0.1), 0 -8px 16px -16px rgba(0, 0, 0, 0.32))\n);\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n/// Set space property\n///\n/// @param {String} $property [\"margin\"] - propriété à appliquer à l'espacement `[\"margin\", \"padding\"]`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `[\"x\", \"y\", \"top\", \"right\", \"bottom\", \"left\"]`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing(\"margin\", 6v, \"bottom\");\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// Core Function : Spacing space\n/// @group core\n////\n\n/// Return space value from type map and convert to rem.\n///\n/// @param {Number} $value - valeur de l'espacement, permet de convertir cet espacement de v (4px) ou w (8px) en rem\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     margin-bottom: space(6v);\n///   }\n@function space($value) {\n  @if type-of($value) == list {\n    $list: ();\n    $separator: list-separator($value);\n    @each $v in $value {\n      $list: append($list, space($v), $separator);\n    }\n    @return $list;\n  }\n  @if type-of($value) == string {\n    $c: str-index($value, '(');\n    @if $c {\n      $b: null;\n      $n: 0;\n      $i: $c + 1;\n      $l: str-length($value);\n      @while $b == null and $i <= $l {\n        $char: str-slice($value, $i, $i);\n        @if $char == '(' {\n          $n: $n + 1;\n        }\n        @else if $char == ')' {\n          @if $n > 0 {\n            $n: $n - 1;\n          }\n          @else {\n            $b: $i;\n          }\n        }\n        $i: $i + 1;\n      }\n\n      $start: unquote('');\n      $middle: space(str-slice($value, $c + 1, $b - 1));\n      $end: unquote('');\n\n      @if $c > 1 {\n        $start: space(str-slice($value, 1, $c - 1));\n      }\n\n      $l: str-length($value);\n      @if $b < $l {\n        $end: space(str-slice($value, $b + 1, $l));\n      }\n\n      @return unquote('#{$start}(#{$middle})#{$end}');\n    }\n\n    @if str-index($value, ',') {\n      @return space(str-split($value, ','));\n    }\n\n    @if str-index($value, ' ') {\n      @return space(str-split($value, ' '));\n    }\n\n    $value: unquote($value);\n  }\n\n  @if $value == 0 {\n    @return $value;\n  }\n\n  @if length($value) > 1 {\n    $result: ();\n    @each $v in $value {\n      $result: append($result, space($v));\n    }\n    @return $result;\n  }\n\n  @if is-basic-unit($value) {\n    @return $value;\n  }\n\n  $v: quote($value);\n\n  $q: str-to-num(unquote(str_slice($v, 0, str_length($v) - 1)));\n  $unit: str_slice($v, str-length($v), str_length($v));\n\n  @if is-unit($value, v) {\n    @return $q * 0.25rem;\n  }\n  @else if is-unit($value, w) {\n    @return $q * 0.5rem;\n  }\n  @return $value;\n}\n","////\n/// Core Tool : Spacing position\n/// @group core\n////\n\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  position: #{$position};\n  @if $top != null {\n    top: #{space($top)};\n  }\n  @if $right != null {\n    right: #{space($right)};\n  }\n  @if $bottom != null {\n    bottom: #{space($bottom)};\n  }\n  @if $left != null {\n    left: #{space($left)};\n  }\n\n  @include size($width, $height);\n\n  @content;\n}\n\n@mixin relative($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(relative, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(absolute, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin fixed($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(fixed, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin sticky($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(sticky, $top, $right, $bottom, $left, $width, $height);\n}\n","////\n/// Core Tool : Selector block\n/// @group core\n////\n\n@mixin title() {\n  &__title {\n    @content;\n  }\n}\n\n@mixin body() {\n  &__body {\n    @content;\n  }\n}\n\n@mixin list() {\n  &__list {\n    @content;\n  }\n}\n\n@mixin list-item() {\n  &__item {\n    @content;\n  }\n}\n","////\n/// Core Color Tools : Element\n/// @group core\n////\n\n$ACCENT: none;\n\n@mixin _scheme-element($prop, $part, $decisions, $legacy: false, $important: false, $value: $COLOR, $hover: false) {\n  $result: str-replace($value, '$COLOR', '$color#1');\n  $length: length($decisions) / 2;\n  @for $i from 1 through $length {\n    $token: nth($decisions, $i * 2 - 1);\n    $tint: nth($decisions, $i * 2);\n    @if $tint == accent {\n      $tint: $ACCENT;\n    }\n    $needle: '$color#1';\n    @if length($decisions) > 2 {\n      $needle: '$color##{$i}';\n    }\n    $part-token: _get-part-token($part, $token);\n    $p: map-get($part-token, part);\n    $token: map-get($part-token, token);\n\n    @if $tint == neutral {\n      $tint: _get-neutral-tint($p, $token);\n    }\n    $color: _get-value($p, $token, $tint, $legacy);\n    $result: _replace_color($result, $color, $needle);\n\n    @if $important {\n      $result: #{$result} !important;\n    }\n\n    @if $hover and $part == background and $p == background and $legacy == false {\n      $blend: var(#{_get-decision-prop($part, $token, $tint)}-blend);\n      @if $important {\n        $blend: #{$blend} !important;\n      }\n\n      --blend: #{$blend};\n    }\n  }\n\n  @if $legacy {\n    @include legacy(ie11) {\n      #{$prop}: #{$result};\n    }\n  }\n  @else {\n    #{$prop}: #{$result};\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-bg-color($decisions, $legacy: false, $important: false) {\n  @include _scheme-element(background-color, background, $decisions, $legacy, $important, $COLOR, true);\n}\n\n@mixin scheme-element-bg-transparent($legacy: false, $hover: false) {\n  @if $legacy {\n    @include legacy(ie11) {\n      background-color: transparent;\n    }\n  }\n  @else {\n    background-color: transparent;\n    @if $hover {\n      --blend: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-bg-image-color($decisions, $legacy: false, $important: false, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: length($decisions) / 2;\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: unquote('$color##{$i}');\n      $transformed: append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include _scheme-element(background-image, background, $decisions, $legacy, $important, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-text-color($decisions, $legacy: false, $important: false) {\n  @include _scheme-element(color, text, $decisions, $legacy, $important);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-fill-color($decisions, $legacy: false, $important: false) {\n  @include _scheme-element(fill, background , $decisions, $legacy, $important);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de border\n/// @param {String} $side - le côté affecté. valeurs: top, right, bottom, left\n@mixin scheme-element-border-color($decisions, $legacy: false, $important: false, $value:1px solid $COLOR, $side:null) {\n  $prop:border;\n  @if $side != null {\n    $prop:border-#{$side};\n  }\n  @include _scheme-element($prop, border, $decisions, $legacy, $important, $value);\n}\n\n@mixin scheme-element-no-border($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    border: 0;\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin scheme-element-outline-color($decisions, $legacy: false, $important: false, $value:1px solid $COLOR) {\n  @include _scheme-element(outline, border, $decisions, $legacy, $important, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin scheme-element-box-shadow-color($decisions, $legacy: false, $important: false, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: length($decisions) / 2;\n  $i: 1;\n  @each $v in $value {\n    @if map-has-key($box-shadows, $v) {\n      $transformed: append($transformed, _get-box-shadow($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include _scheme-element(box-shadow, border, $decisions, $legacy, $important, space($value));\n}\n\n@mixin scheme-element-no-box-shadow($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    box-shadow: none;\n  }\n}\n","////\n/// Sidemenu Module : title\n/// @group sidemenu\n////\n\n/**\n* Titre facultatif\n */\n@include title {\n  @include padding(4v 0);\n  @include text-style(lg);\n  font-weight: font-weight(bold);\n\n  @include margin(0 0 6v, md);\n  @include padding(0, md);\n}\n","////\n/// Core Setting : Typography font-weight\n/// @group core\n////\n\n$font-weight-scale: (\n  light: 300,\n  regular: 400,\n  bold: 700,\n  xx-bold: 900\n);\n","////\n/// Sidemenu Module : list\n/// @group sidemenu\n////\n\n@include list {\n  font-weight: font-weight('bold');\n\n  #{ns(sidemenu__list)} {\n    @include margin(0 2v 6v);\n    @include margin(0 4v, md);\n    font-weight: font-weight();\n    #{ns(sidemenu__link)},\n    #{ns(sidemenu__btn)} {\n      @include text-style(md);\n      font-weight: font-weight();\n    }\n\n    #{ns(sidemenu__list)} {\n      #{ns(sidemenu__link)},\n      #{ns(sidemenu__btn)} {\n        @include text-style(sm);\n        @include padding(3v 2v, md);\n      }\n    }\n  }\n\n  @include margin(0,md);\n}\n\n@include list-item {\n  @include relative;\n  @include before(none);\n}\n","////\n/// Sidemenu Module : inner\n/// @group sidemenu\n////\n\n&__inner {\n  @include padding(0 8v 0 1v, md);\n\n  /**\n  * Ce wrapper ne sert que pour la version mobile\n  * On l'utilise pour l'ouverture/fermeture du sidemenu entier\n  */\n  > #{ns(collapse)} {\n    @include margin(0 4v);\n    @include margin(0, md);\n\n    @include respond-from(md) {\n      overflow: initial;\n      max-height: none;\n\n      @include before {\n        display: none;\n      }\n\n      &:not(#{ns(collapse)}--expanded) {\n        visibility: inherit;\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Action Hover\n/// @group core\n////\n\n@mixin hover-media-query () {\n  @media (hover: hover) and (pointer: fine) {\n    @content;\n  }\n}\n\n@mixin hover-type-selector($elements, $type: all) {\n  $selectors: ();\n\n  @each $element, $setting in $elements {\n    $hover: map-get($setting, hover);\n    $selector: map-get($setting, selector);\n    @if $hover {\n      @if $type == map-get($hover, type) or $type == all {\n        $nested: nest($selector, map-get($hover, selector));\n        $associated: $nested;\n        @if & != null and quote(&) != ':root' {\n          $associated: selector-associate(quote(&), $nested);\n        }\n        $selectors: append($selectors, $associated, 'comma');\n      }\n    }\n  }\n\n  @at-root #{$selectors} {\n    @content;\n  }\n}\n\n@mixin hover-blend($background-images: (), $background-sizes: (), $background-positions: ()) {\n  --hsla: #{css-hsl-alpha(var(--blend), var(--a))};\n  --blend-size: 0%; // 2048px 2048px;\n  --blend-position: 50%;\n  @include hover-blend-background($background-images, $background-sizes, $background-positions);\n\n  &:hover,\n  &:active {\n    --blend-size: var(--blend-full-size); // 2048px 2048px;\n  }\n\n  &:hover {\n    --a: #{$hover-alpha};\n  }\n\n  &:active {\n    --a: #{$active-alpha};\n  }\n}\n\n@mixin hover-blend-background($background-images: (), $background-sizes: (), $background-positions: ()) {\n  background-repeat: no-repeat;\n  background-size: append($background-sizes, var(--blend-size));\n  background-position: append($background-positions, var(--blend-position));\n  background-image: append($background-images, radial-gradient(circle at center, var(--hsla), var(--hsla) 3%));\n}\n\n@mixin enable-blend() {\n  --blend-full-size: 100%;\n}\n\n@mixin disable-blend() {\n  --blend-full-size: 0;\n}\n","////\n/// Core Tool : Display display\n/// @group core\n////\n\n@mixin display-flex($flex-direction: row, $align-items: null, $justify-content: null, $flex-wrap: null, $inline: false) {\n\n  @if $inline == true {\n    display: inline-flex;\n  }\n  @else {\n    display: flex;\n  }\n\n  @if $flex-direction != null {\n    flex-direction: #{$flex-direction};\n  }\n\n  @if $align-items != null {\n    align-items: #{$align-items};\n  }\n\n  @if $justify-content != null {\n    justify-content: #{$justify-content};\n  }\n\n  @if $flex-wrap != null {\n    flex-wrap: #{$flex-wrap};\n  }\n}\n","////\n/// Sidemenu Module : action\n/// @group sidemenu\n////\n\n/**\n * Styles du bouton et du lien d'accès direct du sidemnu\n */\n#{ns(sidemenu__link)},\n#{ns(sidemenu__btn)} {\n  @include relative;\n  @include display-flex(row, center);\n  @include size(100%);\n  @include padding(3v 2v);\n  @include margin(0, md);\n  @include text-style(md);\n  @include scheme-element-no-box-shadow;\n  text-align: left;\n  font-weight: font-weight(bold);\n\n  @include enable-blend;\n\n  &[aria-current] {\n    @include after('') {\n      @include absolute(3v, null, 3v, 0, 2px);\n    }\n  }\n\n  @include size(100%, null, md);\n}\n\n/**\n * Style du bouton du sidemnenu pour ouvrir/refermer les listes de niveaux 1 et 2\n * Bouton pour la version mobile pour ouvrir/refermer le sidemenu\n */\n#{ns(sidemenu__btn)} {\n  &[aria-expanded] {\n    @include display-flex(row-reverse, center);\n    @include padding(3v 8v 3v 2v, md);\n\n    @include icon(arrow-down-s-line, sm) {\n      @include margin-left(auto);\n      @include margin-right(0);\n      transition: transform 0.3s;\n\n      @include margin-right(-6v, md);\n    }\n  }\n\n  &[aria-expanded=\"true\"] {\n    @include scheme-element-no-box-shadow;\n    @include before {\n      transform: rotate(-180deg);\n    }\n  }\n}\n\n/**\n * Modificateur pour le bouton en version mobile permettant d'ouvrir/refermer le sidemenu\n * L'icône de gauche est défini dans _sidemenu.scss (provisoire)\n */\n// @TODO transformer en modifier\n#{ns(sidemenu__inner)} > #{ns(sidemenu__btn)} {\n  @include size(100%);\n  font-weight: normal;\n  @include before {\n    @include margin-right(4v);\n  }\n\n  /**\n  * Ajout de l'icône de menu en mode mobile (provisoire)\n  */\n  @include icon(menu-2-fill, sm, after) {\n    @include margin-x(2v);\n  }\n\n  @include respond-from(md) {\n    display: none;\n  }\n}\n","////\n/// Core Tool : Spacing size\n/// @group core\n////\n\n@mixin width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n  }\n}\n\n@mixin min-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      min-width: #{space($width)};\n    }\n  }\n}\n\n@mixin max-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      max-width: #{space($width)};\n    }\n  }\n}\n\n@mixin height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      min-height: #{space($height)};\n    }\n  }\n}\n\n@mixin max-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      max-height: #{space($height)};\n    }\n  }\n}\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{space($max-height)};\n    }\n  }\n}\n","////\n/// Core Tool : Icon\n/// @group core\n////\n\n/// Return icon size from map\n/// @param {String} $size [\"md\"] - Icon size from `$icon-size-map` (Default to \"md\" = 16px)\n///\n/// @example scss - Set icon size to `SM` (12px)\n///   .foo {\n///     width: icon-size(sm);\n///     height: icon-size(sm);\n///   }\n@function icon-size($size: md) {\n  @return px-rem(map-get($icon-size-map, $size));\n}\n\n@mixin icon-size($size:md) {\n  font-size: #{icon-size($size)} !important;\n}\n\n@mixin with-icon($size:md) {\n  @include has-icon {\n    @include before {\n      @if $size != md {\n        @include icon-size($size);\n      }\n      @content;\n    }\n  }\n}\n\n@mixin generate-icons($base) {\n  @each $icon, $settings in $icons-settings {\n    #{ns($base + '-' + $icon)} {\n      @include before(icon-glyph($icon));\n    }\n  }\n}\n\n@function icon-glyph($icon, $is-ligature: false) {\n  $icon-settings: map-get($icons-settings, $icon);\n  @if $is-ligature {\n    @return \"#{map-get($icon-settings, ligature)}\";\n  }\n  @else {\n    @return \"#{map-get($icon-settings, codepoint)}\";\n  }\n}\n\n@mixin icon-content($icon) {\n  content: icon-glyph($icon);\n}\n\n@function font-icon($size: md) {\n  @return normal normal normal #{icon-size($size)}/1 #{$namespace}-icon;\n}\n\n@mixin font-icon($size: md) {\n  font: font-icon($size);\n}\n\n@mixin icon($icon:null, $size:md, $pseudo:before) {\n  @include _pseudo($pseudo) {\n    @if $size != null {\n      @include font-icon($size);\n    }\n\n    @if $icon != null {\n      @include icon-content($icon);\n    }\n\n    @content;\n  }\n}\n","////\n/// Sidemenu Scheme\n/// @group sidemenu\n////\n\n@mixin _sidemenu-scheme($legacy: false) {\n  #{ns(sidemenu)} {\n    /*\n    @include scheme-element-bg-color(default grey);\n\n    @include respond-from(md) {\n      @include scheme-element-bg-transparent($legacy, true);\n    }\n    */\n\n    @include title {\n      @include scheme-element-text-color(title grey, $legacy);\n      @include scheme-element-box-shadow-color(default grey, $legacy, false, bottom-1-in);\n      @include scheme-element-no-box-shadow(md);\n    }\n\n    @include list-item {\n      @include scheme-element-box-shadow-color(default grey, $legacy, false, bottom-1-in);\n      @include scheme-element-no-box-shadow(md);\n\n      &:last-child {\n        #{ns(sidemenu__btn)} {\n          @include scheme-element-box-shadow-color(default grey, $legacy, false, bottom-1-in);\n          @include scheme-element-no-box-shadow(md);\n        }\n      }\n    }\n\n    &__inner {\n      @include respond-from(md) {\n        @include scheme-element-box-shadow-color(default grey, $legacy, false, right-1-in);\n      }\n    }\n\n    @include respond-from(md) {\n      &--right {\n        #{ns(sidemenu__inner)} {\n          @include scheme-element-box-shadow-color(default grey, $legacy, false, left-1-in);\n        }\n      }\n\n      &--full-border {\n        #{ns(sidemenu__inner)} {\n          @include scheme-element-box-shadow-color(default grey, $legacy);\n        }\n      }\n    }\n\n    &__link,\n    &__btn {\n      @include scheme-element-text-color(action-high grey, $legacy);\n\n      &[aria-current] {\n        @include scheme-element-text-color(active blue-france, $legacy);\n        @include after {\n          @include scheme-element-bg-color(border-active blue-france, $legacy);\n        }\n      }\n    }\n\n    &__btn {\n      @at-root #{ns(sidemenu__inner)} > #{&} {\n        @include scheme-element-bg-color(default grey, $legacy);\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Selector Breakpoint\n/// @group core\n////\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `[\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `[\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-to(md) {\n///     }\n///   }\n@mixin respond-to($media) {\n\n  @debug 'afin de rester mobile first, n‘utiliser la mixin respond-to uniquement s‘il n‘y a pas d‘autre alternative, lui préférer systématiquement la mixin respond-from';\n\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null and length($limits) == 2 {\n    @media (max-width: nth($limits, 2)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","////\n/// Sidemenu Module : variants\n/// @group sidemenu\n////\n\n/**\n * Variantes du sidemenu proposées juste à partir du breakpoint md\n */\n@include respond-from(md) {\n  /**\n   * Modificateur pour que le sidemenu s'adapte à un affichage à droite du contenu\n   * La bordure se met sur la gauche\n   */\n  &--right {\n    @include padding-left(8v);\n    @include padding-right(0);\n\n    #{ns(sidemenu__inner)} {\n      @include padding(0 4v 0 8v);\n      border-right: 0;\n    }\n  }\n\n  /**\n   * Modificateur pour que le sidemenu soit sticky\n   */\n  &--sticky {\n    @include sticky(0, null, null, null, null, 100vh);\n    overflow: auto;\n  }\n\n  /**\n   * Modificateur pour que le sidemenu soit à la fois sticky et prenne toute la hauteur de la page\n   */\n  &--sticky-full-height {\n    @include sticky(0, null, null, null, null, 100vh);\n    overflow: auto;\n\n    #{ns(sidemenu__inner)} {\n      overflow: auto;\n      @include size(null, 100vh);\n    }\n  }\n\n  /**\n   * Modificateur pour avoir une bordure tout autour du sidemenu\n   */\n  &--full-border {\n\n    #{ns(sidemenu__title)} {\n      @include margin-top(2v);\n    }\n    #{ns(sidemenu__inner)} {\n      @include padding(0 1v 0 1v, md);\n    }\n  }\n}\n"]}