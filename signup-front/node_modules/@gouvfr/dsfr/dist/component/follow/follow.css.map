{"version":3,"sources":["<no source>","../../../follow.css","../../../../../../src/component/follow/main.scss","../../../../../../src/component/follow/style/_tool.scss","../../../../../../src/component/follow/style/_module.scss","../../../../../../src/core/style/spacing/tool/_space.scss","../../../../../../src/core/style/typography/tool/_styles.scss","../../../../../../src/core/style/color/tool/_element.scss","../../../../../../src/core/style/spacing/tool/_position.scss","../../../../../../src/core/style/spacing/tool/_size.scss","../../../../../../src/core/style/display/tool/_sr-only.scss","../../../../../../src/core/style/display/tool/_display.scss","../../../../../../src/core/style/spacing/function/_space.scss","../../../../../../src/core/style/selector/tool/_nest.scss","../../../../../../src/component/link/style/tool/_size.scss","../../../../../../src/core/style/function/_unit.scss","../../../../../../src/component/link/style/tool/_icon.scss","../../../../../../src/core/style/selector/tool/_pseudo.scss","../../../../../../src/core/style/icon/_tool.scss","../../../../../../src/core/style/reset/tool/_list.scss","../../../../../../src/component/follow/style/_scheme.scss","../../../../../../src/core/style/selector/tool/_breakpoint.scss","../../../../../../src/legacy/style/tool/_legacy.scss"],"names":[],"mappings":"AAAA;;GAAA;ACAA,gBAAgB;;ACKhB;;yCDFyC;;AEEzC;;EFCE;AGDF;EC0BI,iBDzBmB;;EE6FnB,2BAA6B;EAA7B,wBAA6B;EC3D3B,gDAAQ;EAUV,mDAAU;ANvCd;;AGAG;EILD,kBAAU;ECkDN,UAAO;EAGP,WAAQ;EJ5BV,UKvBgB;ELuBhB,YKtBkB;EACpB,gBAAgB;EAChB,sBAAsB;EACtB,mBAAmB;;EAAE,eAAA;EACrB,SAAS;ATiBX;;AGnBG;EOAC,aAAa;EAIb,sBAAgB;EFSd,kBAAW;EJGX,aDNqB;AHgB3B;;AG1BG;ECgBG,mBOmEkB;EPnElB,aDFuB;AHiB7B;;AG/BG;EAkBK,uBAAuB;AHiB/B;;AGnCG;ECgBG,kBOmEkB;EPnElB,gBDqBwB;AHgB9B;;AGrDG;;ECgBG,gBOmEkB;AXzBxB;;AG1DG;;ECgBG,gBOmEkB;AXpBxB;;AGFE;EE2BE,2BAA6B;EAA7B,4BAA6B;ALHjC;;AYzFI;ECEF,eCkBgD;EDjBhD,mBFoFsB;EEjFtB,gBFiFsB;EEnEtB,wBAAsD;EAGpD,mBAAe;EEbf,mBAAmB;EA8BnB,gBAAgB;EAChB,mBAAmB;EACnB,eJ6CoB;EI5CpB,gBJ4CoB;EI3CpB,qBAN0C;EAO1C,sBAP0C;EFc1C,qBAF0C;EAG1C,sBAH0C;AbwD9C;;AgBjGE;EC2CA,6CAJ0E;EFAtE,cAAc;EACd,qBAXwC;EAYxC,iBD9B4C;Ad0FlD;;AG7CG;Ee/CD,eAAU;EACV,eAAU;EACV,aAAW;EACX,aAAW;EACX,aAAW;EACX,cAAY;EACZ,kBAAa;AlBsGf;;AY9HI;ECEF,kBCkBgD;EDjBhD,iBFoFsB;EEjFtB,gBFiFsB;EEnEtB,oBAAsD;EAGpD,qBAAe;EEbf,mBAAmB;EA8BnB,gBAAgB;EAChB,mBAAmB;EACnB,eJ6CoB;EI5CpB,gBJ4CoB;EI3CpB,oBAN0C;EAO1C,qBAP0C;AfuG9C;;AgBpIE;EC2CA,2CAJ0E;EFAtE,cAAc;EACd,oBAXwC;EAYxC,eD9B4C;Ad6HlD;;AGhFG;EC7CG,oBOmEkB;AXoExB;;AG1FG;EC7CG,kBOmEkB;ERFhB,oBAAoB;AHiF5B;;AGrGG;EC7CG,eDoE2B;AHkFjC;;AG5KA;ECsBM,kBOmEkB;EPnElB,mBOmEkB;EL5CpB,wDAAU;AN8Id;;AgBhLE;ECmCA,YALU;AjBmNZ;;AgBjPE;ECmCA,YALU;AjBuNZ;;AgBrPE;ECmCA,YALU;AjB2NZ;;AgBzPE;ECmCA,YALU;AjB+NZ;;AgB7PE;ECmCA,YALU;AjBmOZ;;AmB3QE;EbkCI,6CAAQ;EAUV,gDAAU;ANyOd;;AmB9QI;EbqCA,6BAAU;AN6Od;;AmB7QM;EbgCF,+BAAU;ANiPd;;AoBjRI;EjBPD;IAsBK,mBAAmB;EHkBzB;;EGxCC;IAyBO,4BAAiC;EHkBzC;;EG3CC;ICgBG,gBDa4B;IACxB,4BAAiC;EHiBzC;;EG/CC;ICgBG,kBOmEkB;EXRtB;;EG3EC;;ICgBG,gBOmEkB;EXJtB;AA/BF;;AoBzCI;EjBbJ;IC0BI,eDxBmB;EHSrB;;EGLC;;ICgBG,kBOmEkB;EXdtB;;EGRC;IC7CG,kBOmEkB;EXyEtB;;EGlKF;IOMI,aAAa;IAIb,sBAAgB;IAIhB,uBAAa;IAIb,uBAAiB;IFSf,YAAQ;ER0JZ;;EGrLF;ICsBM,6BO+B+C;IP/B/C,cDuFsB;ICvFtB,aDwFqB;IGjEvB,wDAAU;ENmJZ;;EGhMF;ICsBM,8BO+B+C;EX6JnD;;EGlNF;IOMI,aAAa;IAIb,mBAAgB;IAIhB,mBAAa;IAIb,8BAAiB;EVyMnB;;EG3NF;IE0FM,iBAA6B;ELuIjC;;EGjOF;IKmBM,cAAW;IJGX,sBOmEkB;IPnElB,qBOmEkB;EXgJtB;;EGzOF;ICsBM,sBOmEkB;IPnElB,eDkH6B;EHqGjC;;EG7OF;ICsBM,gBDsH8B;ICtH9B,qBOmEkB;EXwJtB;;EGjPF;IE0FM,kBAA6B;EL6JjC;AA3OF;;AqBHI;EFRF;IbwCI,8BAAU;ENkSd;AACF;;AqBnUI;EFRF;IbwCI,yBAAU;ENoQd;;EmB5SA;IbwCI,sBAAU;EN0Qd;;EmB3SE;IbiCE,cAAU;ENgRd;;EmB5SI;Ib4BA,WAAU;ENsRd;;EmB9TA;IbwCI,8BAAU;EN4Rd;AAvBF","file":"follow.css","sourcesContent":[null,"@charset \"UTF-8\";\n/* ------------------------------------ *\\\n  FOLLOW\n\\* ------------------------------------ */\n/**\n* Mixin d'ajout des icones des réseaux sociaux\n**/\n.fr-follow {\n  padding: 1.5rem 0;\n  --title-spacing: 0 0 0.5rem;\n  --text-spacing: 0 0 1rem;\n}\n\n@media (min-width: 48em) {\n  .fr-follow {\n    padding: 2rem 0;\n  }\n}\n\n.fr-follow__newsletter .fr-label {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  /* added line */\n  border: 0;\n}\n\n.fr-follow__newsletter .fr-input-wrap {\n  display: flex;\n  flex-direction: column;\n  max-width: 37.5rem;\n  margin-top: 0;\n}\n\n.fr-follow__newsletter .fr-input-wrap .fr-input {\n  margin-bottom: 1rem;\n  margin-top: 0;\n}\n\n.fr-follow__newsletter .fr-input-wrap .fr-btn {\n  justify-content: center;\n}\n\n@media (min-width: 36em) {\n  .fr-follow__newsletter .fr-input-wrap {\n    flex-direction: row;\n  }\n  .fr-follow__newsletter .fr-input-wrap .fr-btn {\n    border-radius: 0 0.25rem 0 0;\n  }\n  .fr-follow__newsletter .fr-input-wrap .fr-input {\n    margin-bottom: 0;\n    border-radius: 0.25rem 0 0 0;\n  }\n}\n\n.fr-follow__newsletter .fr-hint-text {\n  margin-top: 1.5rem;\n  margin-bottom: 0;\n}\n\n.fr-follow__newsletter .fr-valid-text,\n.fr-follow__newsletter .fr-error-text {\n  margin-top: 1rem;\n}\n\n.fr-follow__newsletter .fr-valid-text + .fr-hint-text,\n.fr-follow__newsletter .fr-error-text + .fr-hint-text {\n  margin-top: 1rem;\n}\n\n@media (min-width: 48em) {\n  .fr-follow__newsletter .fr-valid-text + .fr-hint-text,\n  .fr-follow__newsletter .fr-error-text + .fr-hint-text {\n    margin-top: 0.5rem;\n  }\n}\n\n@media (min-width: 36em) {\n  .fr-follow__newsletter .fr-hint-text {\n    margin-top: 0.5rem;\n  }\n  .fr-follow__newsletter .fr-valid-text,\n  .fr-follow__newsletter .fr-error-text {\n    margin-top: 1rem;\n  }\n}\n\n.fr-follow__social {\n  --text-spacing: 0 0 0.75rem;\n  --title-spacing: 0 0 0.75rem;\n}\n\n.fr-follow__social .fr-link {\n  font-size: 1rem;\n  line-height: 1.5rem;\n  min-height: 2rem;\n  padding: 0.25rem 0.75rem;\n  border-radius: 1rem;\n  flex-direction: row;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 2rem;\n  max-height: 2rem;\n  padding-left: 0.25rem;\n  padding-right: 0.25rem;\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n}\n\n.fr-follow__social .fr-link::before {\n  font: normal normal normal 1.5rem/1 dsfr-icon;\n}\n\n.fr-follow__social .fr-link::before {\n  margin-left: 0;\n  margin-right: 0.25rem;\n  font-size: 1.5rem;\n}\n\n.fr-follow__social .fr-links-group {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n}\n\n.fr-follow__social .fr-links-group--lg .fr-link {\n  font-size: 1.25rem;\n  line-height: 2rem;\n  min-height: 3rem;\n  padding: 0.5rem 1rem;\n  border-radius: 1.5rem;\n  flex-direction: row;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 3rem;\n  max-height: 3rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n\n.fr-follow__social .fr-links-group--lg .fr-link::before {\n  font: normal normal normal 2rem/1 dsfr-icon;\n}\n\n.fr-follow__social .fr-links-group--lg .fr-link::before {\n  margin-left: 0;\n  margin-right: 0.5rem;\n  font-size: 2rem;\n}\n\n.fr-follow__social .fr-links-group--lg > li {\n  margin-right: 0.5rem;\n}\n\n@media (min-width: 48em) {\n  .fr-follow__social .fr-links-group--lg > li {\n    margin-right: 1rem;\n  }\n}\n\n.fr-follow__social .fr-links-group > li {\n  margin-right: 1rem;\n  display: inline-flex;\n}\n\n.fr-follow__social .fr-links-group > li:last-child {\n  margin-right: 0;\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > * > div {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n    height: 100%;\n  }\n}\n\n.fr-follow .fr-grid-row > *:not(:first-child) {\n  margin-top: 1.5rem;\n  padding-top: 1.5rem;\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:not(:first-child) {\n    padding-left: calc(100% / 12);\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:not(:first-child) {\n    padding-top: 0;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:not(:first-child) {\n    margin-top: 0;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:not(:last-child) {\n    padding-right: calc(100% / 12);\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:first-child:last-child > div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:first-child:last-child > .fr-follow__newsletter {\n    --text-spacing: 0;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:first-child:last-child > .fr-follow__newsletter > * {\n    max-width: 50%;\n    padding-right: 0.75rem;\n    padding-left: 0.75rem;\n  }\n  .fr-follow .fr-grid-row > *:first-child:last-child > .fr-follow__newsletter > :first-child {\n    padding-right: 0.75rem;\n    padding-left: 0;\n  }\n  .fr-follow .fr-grid-row > *:first-child:last-child > .fr-follow__newsletter > :last-child {\n    padding-right: 0;\n    padding-left: 0.75rem;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:first-child:last-child > .fr-follow__social {\n    --title-spacing: 0;\n  }\n}\n\n.fr-follow .fr-link--facebook::before {\n  content: \"\";\n}\n\n.fr-follow .fr-link--twitter::before {\n  content: \"\";\n}\n\n.fr-follow .fr-link--instagram::before {\n  content: \"\";\n}\n\n.fr-follow .fr-link--linkedin::before {\n  content: \"\";\n}\n\n.fr-follow .fr-link--youtube::before {\n  content: \"\";\n}\n\n.fr-follow {\n  --blend: var(--background-alt-blue-france-blend);\n  background-color: var(--background-alt-blue-france);\n}\n\n.fr-follow .fr-input {\n  --blend: var(--background-default-grey-blend);\n  background-color: var(--background-default-grey);\n}\n\n.fr-follow__title {\n  color: var(--text-title-grey);\n}\n\n.fr-follow__newsletter-legal {\n  color: var(--text-mention-grey);\n}\n\n.fr-follow .fr-grid-row > *:not(:first-child) {\n  box-shadow: 0 -1px 0 0 var(--border-default-blue-france);\n}\n\n@media (min-width: 48em) {\n  .fr-follow .fr-grid-row > *:not(:first-child) {\n    box-shadow: -1px 0 0 0 var(--border-default-blue-france);\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow {\n    background-color: #f5f5fe;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow .fr-input {\n    background-color: #fff;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow__title {\n    color: #161616;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow__newsletter-legal {\n    color: #666;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-follow .fr-grid-row > *:not(:first-child) {\n    box-shadow: 0 -1px 0 0 #6a6af4;\n  }\n}\n\n@media all and (min-width: 48em) and (-ms-high-contrast: none), (min-width: 48em) and (-ms-high-contrast: active) {\n  .fr-follow .fr-grid-row > *:not(:first-child) {\n    box-shadow: -1px 0 0 0 #6a6af4;\n  }\n}\n","////\n/// Follow Main\n/// @group follow\n////\n\n/* ------------------------------------ *\\\n  FOLLOW\n\\* ------------------------------------ */\n\n@import 'index';\n@import 'style/module';\n@import 'style/scheme';\n\n@include _follow-scheme;\n","////\n/// Follow Tool\n/// @group follow\n////\n\n/**\n* Mixin d'ajout des icones des réseaux sociaux\n**/\n@mixin social-icon ($modifier, $icon) {\n  #{ns('link--' + $modifier)} {\n    @include icon($icon, null);\n  }\n}\n","////\n/// Follow Module\n/// @group follow\n////\n\n#{ns(follow)} {\n  @include padding(6v 0);\n  @include padding(8v 0, md);\n  @include set-title-margin(0 0 2v);\n  @include set-text-margin(0 0 4v);\n\n  &__newsletter {\n    // bloc newsletter\n\n    #{ns(label)} {\n      @include sr-only();\n    }\n\n    #{ns(input-wrap)} {\n      @include display-flex(column);\n      @include max-width(150v);\n      @include margin-top(0);\n\n      #{ns(input)} {\n        @include margin-bottom(4v);\n        @include margin-top(0);\n      }\n\n      #{ns(btn)} {\n        justify-content: center;\n      }\n\n      @include respond-from(sm) {\n        flex-direction: row;\n\n        #{ns(btn)} {\n          border-radius: 0 #{space(1v)} 0 0;\n        }\n\n        #{ns(input)} {\n          @include margin-bottom(0);\n          border-radius: #{space(1v)} 0 0 0;\n        }\n      }\n    }\n\n    #{ns(hint-text)} {\n      @include margin-top(6v);\n      @include margin-bottom(0);\n    }\n\n    #{ns(valid-text)},\n    #{ns(error-text)} {\n      @include margin-top(4v);\n      + #{ns(hint-text)} {\n        @include margin-top(4v);\n        @include margin-top(2v, md);\n      }\n    }\n\n    @include respond-from(sm) {\n      #{ns(hint-text)} {\n        @include margin-top(2v);\n      }\n\n      #{ns(valid-text)},\n      #{ns(error-text)} {\n        @include margin-top(4v);\n      }\n    }\n  }\n\n  &__social {\n    // bloc social\n    @include set-text-margin(0 0 3v);\n    @include set-title-margin(0 0 3v);\n    @include nest-link(md, only, null, null, true, true);\n\n    #{ns(links-group)} {\n      @include disable-list-style;\n\n      &--lg {\n        @include nest-link(lg, only);\n\n        > li {\n          @include margin-right(2v);\n          @include margin-right(4v, md);\n        }\n      }\n\n      > li {\n        @include margin-right(4v);\n        display: inline-flex;\n\n        &:last-child {\n          @include margin-right(0);\n        }\n      }\n    }\n  }\n\n  #{ns(grid-row)} {\n    > * > div {\n      @include respond-from(md) {\n        @include display-flex(column, flex-start, center);\n        @include height(100%);\n      }\n    }\n\n    > *:not(:first-child) {\n      // Séparateur en box-shadow dans schemes\n      @include padding-left(calc(100% / 12), md);\n      @include margin-top(6v);\n      @include padding-top(6v);\n      @include padding-top(0, md);\n      @include margin-top(0, md);\n    }\n\n    > *:not(:last-child) {\n      @include padding-right(calc(100% / 12), md);\n    }\n\n    > *:first-child:last-child {\n      > div {\n        @include respond-from(md) {\n          @include display-flex(row, center, space-between);\n        }\n      }\n\n      > #{ns(follow)}__newsletter {\n        // code spécifique à newsletter seul\n        @include set-text-margin(0,md);\n        @include respond-from(md) {\n          & > * {\n            @include max-width(50%);\n            @include padding-right(3v);\n            @include padding-left(3v);\n          }\n\n          & > :first-child {\n            @include padding-right(3v);\n            @include padding-left(0);\n          }\n\n          & > :last-child {\n            @include padding-right(0);\n            @include padding-left(3v);\n          }\n        }\n      }\n\n      > #{ns(follow)}__social {\n        // code spécifique à social seul\n        @include set-title-margin(0, md);\n      }\n    }\n  }\n\n  @include social-icon(facebook, facebook-circle-fill);\n  @include social-icon(twitter, twitter-fill);\n  @include social-icon(instagram, instagram-fill);\n  @include social-icon(linkedin, linkedin-box-fill);\n  @include social-icon(youtube, youtube-fill);\n}\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n/// Set space property\n///\n/// @param {String} $property [\"margin\"] - propriété à appliquer à l'espacement `[\"margin\", \"padding\"]`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `[\"x\", \"y\", \"top\", \"right\", \"bottom\", \"left\"]`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing(\"margin\", 6v, \"bottom\");\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// Core Tool : Typography build\n/// @group core\n////\n\n@function get-text-style($font-size) {\n  @return map-get($text-styles, $font-size);\n}\n\n@function get-title-style($font-size) {\n  @return map-get($title-styles, $font-size);\n}\n\n@mixin _stylize($font-size, $styles, $prepend, $append) {\n  $style: map-get($styles, $font-size);\n\n  @if $prepend == null {\n    $prepend: '';\n  }\n\n  @if $append == null {\n    $append: '';\n  }\n\n  font-size: #{$prepend} #{px-rem($font-size)} #{$append};\n\n  @if map-has-key($style, line-height) {\n    line-height: #{$prepend} space(map-get($style, line-height)) #{$append};\n  }\n}\n\n@mixin _responsive-styles($settings, $styles, $is-responsive, $prepend, $append) {\n  $breakpoints: map-get($settings, breakpoints);\n\n  @if map-has-key($settings, weight) {\n    font-weight: #{$prepend} map-get($font-weight-scale, map-get($settings, weight)) #{$append};\n  }\n\n  @if $is-responsive {\n    @each $breakpoint, $size in $breakpoints {\n      @if $breakpoint == first {\n        @include _stylize($size, $styles, $prepend, $append);\n      }\n      @else {\n        @include respond-from($breakpoint) {\n          @include _stylize($size, $styles, $prepend, $append);\n        }\n      }\n    }\n  }\n  @else {\n    @if map-has-key($breakpoints, md) {\n      @include _stylize(map-get($breakpoints, md), $styles);\n    }\n    @else {\n      @include _stylize(map-get($breakpoints, first), $styles);\n    }\n  }\n}\n\n@mixin _space-text($settings) {\n  @include margin( var(#{'--' + map-get($settings, 'margin') + '-spacing'}) );\n}\n\n@mixin text-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($text-settings, $name);\n  $append: '';\n  @if $important {\n    $append: ' !important';\n  }\n\n  @include _responsive-styles($settings, $text-styles, $is-responsive, $prepend, $append);\n\n  @if $with-spacing {\n    @include _space-text($settings);\n  }\n}\n\n@mixin title-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($title-settings, $name);\n  $append: '';\n  @if $important {\n    $append: ' !important';\n  }\n\n  @include _responsive-styles($settings, $title-styles, $is-responsive, $prepend, $append);\n\n  @if $with-spacing {\n    @include _space-text($settings);\n  }\n}\n\n@mixin _set-typography-var($name, $value, $bp: null) {\n  @if $bp != null {\n    @include respond-from(#{$bp}) {\n      --#{$name}-spacing: #{space($value)};\n    }\n  }\n  @else {\n    --#{$name}-spacing: #{space($value)};\n  }\n}\n\n@mixin set-title-margin($margin, $bp:null) {\n  @include _set-typography-var(title, $margin, $bp);\n}\n\n@mixin set-text-margin($margin, $bp:null) {\n  @include _set-typography-var(text, $margin, $bp);\n}\n\n@mixin set-display-margin($margin, $bp:null) {\n  @include _set-typography-var(display, $margin, $bp);\n}\n","////\n/// Core Color Tools : Element\n/// @group core\n////\n\n$ACCENT: none;\n\n@mixin _scheme-element($prop, $part, $decisions, $legacy: false, $important: false, $value: $COLOR, $hover: false) {\n  $result: str-replace($value, '$COLOR', '$color#1');\n  $length: length($decisions) / 2;\n  @for $i from 1 through $length {\n    $token: nth($decisions, $i * 2 - 1);\n    $tint: nth($decisions, $i * 2);\n    @if $tint == accent {\n      $tint: $ACCENT;\n    }\n    $needle: '$color#1';\n    @if length($decisions) > 2 {\n      $needle: '$color##{$i}';\n    }\n    $part-token: _get-part-token($part, $token);\n    $p: map-get($part-token, part);\n    $token: map-get($part-token, token);\n\n    @if $tint == neutral {\n      $tint: _get-neutral-tint($p, $token);\n    }\n    $color: _get-value($p, $token, $tint, $legacy);\n    $result: _replace_color($result, $color, $needle);\n\n    @if $important {\n      $result: #{$result} !important;\n    }\n\n    @if $hover and $part == background and $p == background and $legacy == false {\n      $blend: var(#{_get-decision-prop($part, $token, $tint)}-blend);\n      @if $important {\n        $blend: #{$blend} !important;\n      }\n\n      --blend: #{$blend};\n    }\n  }\n\n  @if $legacy {\n    @include legacy(ie11) {\n      #{$prop}: #{$result};\n    }\n  }\n  @else {\n    #{$prop}: #{$result};\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-bg-color($decisions, $legacy: false, $important: false) {\n  @include _scheme-element(background-color, background, $decisions, $legacy, $important, $COLOR, true);\n}\n\n@mixin scheme-element-bg-transparent($legacy: false, $hover: false) {\n  @if $legacy {\n    @include legacy(ie11) {\n      background-color: transparent;\n    }\n  }\n  @else {\n    background-color: transparent;\n    @if $hover {\n      --blend: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-bg-image-color($decisions, $legacy: false, $important: false, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: length($decisions) / 2;\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: unquote('$color##{$i}');\n      $transformed: append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include _scheme-element(background-image, background, $decisions, $legacy, $important, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-text-color($decisions, $legacy: false, $important: false) {\n  @include _scheme-element(color, text, $decisions, $legacy, $important);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n@mixin scheme-element-fill-color($decisions, $legacy: false, $important: false) {\n  @include _scheme-element(fill, background , $decisions, $legacy, $important);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de border\n/// @param {String} $side - le côté affecté. valeurs: top, right, bottom, left\n@mixin scheme-element-border-color($decisions, $legacy: false, $important: false, $value:1px solid $COLOR, $side:null) {\n  $prop:border;\n  @if $side != null {\n    $prop:border-#{$side};\n  }\n  @include _scheme-element($prop, border, $decisions, $legacy, $important, $value);\n}\n\n@mixin scheme-element-no-border($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    border: 0;\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin scheme-element-outline-color($decisions, $legacy: false, $important: false, $value:1px solid $COLOR) {\n  @include _scheme-element(outline, border, $decisions, $legacy, $important, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {String} $decisions - token de décision\n/// @param {Boolean} $important - Si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin scheme-element-box-shadow-color($decisions, $legacy: false, $important: false, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: length($decisions) / 2;\n  $i: 1;\n  @each $v in $value {\n    @if map-has-key($box-shadows, $v) {\n      $transformed: append($transformed, _get-box-shadow($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include _scheme-element(box-shadow, border, $decisions, $legacy, $important, space($value));\n}\n\n@mixin scheme-element-no-box-shadow($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    box-shadow: none;\n  }\n}\n","////\n/// Core Tool : Spacing position\n/// @group core\n////\n\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  position: #{$position};\n  @if $top != null {\n    top: #{space($top)};\n  }\n  @if $right != null {\n    right: #{space($right)};\n  }\n  @if $bottom != null {\n    bottom: #{space($bottom)};\n  }\n  @if $left != null {\n    left: #{space($left)};\n  }\n\n  @include size($width, $height);\n\n  @content;\n}\n\n@mixin relative($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(relative, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(absolute, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin fixed($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(fixed, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin sticky($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(sticky, $top, $right, $bottom, $left, $width, $height);\n}\n","////\n/// Core Tool : Spacing size\n/// @group core\n////\n\n@mixin width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n  }\n}\n\n@mixin min-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      min-width: #{space($width)};\n    }\n  }\n}\n\n@mixin max-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      max-width: #{space($width)};\n    }\n  }\n}\n\n@mixin height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      min-height: #{space($height)};\n    }\n  }\n}\n\n@mixin max-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      max-height: #{space($height)};\n    }\n  }\n}\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{space($max-height)};\n    }\n  }\n}\n","////\n/// Core Tool : Display sr-only\n/// @group core\n////\n\n@mixin sr-only() {\n  @include absolute;\n  @include size(1px, 1px);\n  @include padding(0);\n  @include margin(-1px);\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap; /* added line */\n  border: 0;\n}\n\n@mixin sr-only-from() {\n  @each $bp, $limits in $breakpoints {\n    #{ns('sr-only-' + $bp)} {\n      @include respond-from($bp) {\n        @include sr-only();\n      }\n    }\n  }\n}\n\n@mixin sr-only-to() {\n  @each $bp, $limits in $breakpoints {\n    #{ns('sr-only-to-' + $bp)} {\n      @include respond-to($bp) {\n        @include sr-only();\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Display display\n/// @group core\n////\n\n@mixin display-flex($flex-direction: row, $align-items: null, $justify-content: null, $flex-wrap: null, $inline: false) {\n\n  @if $inline == true {\n    display: inline-flex;\n  }\n  @else {\n    display: flex;\n  }\n\n  @if $flex-direction != null {\n    flex-direction: #{$flex-direction};\n  }\n\n  @if $align-items != null {\n    align-items: #{$align-items};\n  }\n\n  @if $justify-content != null {\n    justify-content: #{$justify-content};\n  }\n\n  @if $flex-wrap != null {\n    flex-wrap: #{$flex-wrap};\n  }\n}\n","////\n/// Core Function : Spacing space\n/// @group core\n////\n\n/// Return space value from type map and convert to rem.\n///\n/// @param {Number} $value - valeur de l'espacement, permet de convertir cet espacement de v (4px) ou w (8px) en rem\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     margin-bottom: space(6v);\n///   }\n@function space($value) {\n  @if type-of($value) == list {\n    $list: ();\n    $separator: list-separator($value);\n    @each $v in $value {\n      $list: append($list, space($v), $separator);\n    }\n    @return $list;\n  }\n  @if type-of($value) == string {\n    $c: str-index($value, '(');\n    @if $c {\n      $b: null;\n      $n: 0;\n      $i: $c + 1;\n      $l: str-length($value);\n      @while $b == null and $i <= $l {\n        $char: str-slice($value, $i, $i);\n        @if $char == '(' {\n          $n: $n + 1;\n        }\n        @else if $char == ')' {\n          @if $n > 0 {\n            $n: $n - 1;\n          }\n          @else {\n            $b: $i;\n          }\n        }\n        $i: $i + 1;\n      }\n\n      $start: unquote('');\n      $middle: space(str-slice($value, $c + 1, $b - 1));\n      $end: unquote('');\n\n      @if $c > 1 {\n        $start: space(str-slice($value, 1, $c - 1));\n      }\n\n      $l: str-length($value);\n      @if $b < $l {\n        $end: space(str-slice($value, $b + 1, $l));\n      }\n\n      @return unquote('#{$start}(#{$middle})#{$end}');\n    }\n\n    @if str-index($value, ',') {\n      @return space(str-split($value, ','));\n    }\n\n    @if str-index($value, ' ') {\n      @return space(str-split($value, ' '));\n    }\n\n    $value: unquote($value);\n  }\n\n  @if $value == 0 {\n    @return $value;\n  }\n\n  @if length($value) > 1 {\n    $result: ();\n    @each $v in $value {\n      $result: append($result, space($v));\n    }\n    @return $result;\n  }\n\n  @if is-basic-unit($value) {\n    @return $value;\n  }\n\n  $v: quote($value);\n\n  $q: str-to-num(unquote(str_slice($v, 0, str_length($v) - 1)));\n  $unit: str_slice($v, str-length($v), str_length($v));\n\n  @if is-unit($value, v) {\n    @return $q * 0.25rem;\n  }\n  @else if is-unit($value, w) {\n    @return $q * 0.5rem;\n  }\n  @return $value;\n}\n","////\n/// Core Tool : Selector nest\n/// @group core\n////\n\n@mixin nest($selector: null) {\n  @if $selector {\n    #{$selector} {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","////\n/// Link Tool : sizes\n/// @group link\n////\n\n@mixin _build-link-size($size-settings, $border-radius: false) {\n  $font-size: map_get($size-settings, font-size);\n  $style: get-text-style($font-size);\n  $line-height: space(map_get($style, line-height));\n  font-size: px-rem($font-size);\n  line-height: $line-height;\n\n  $min-height: space(map_get($size-settings, min-height));\n  min-height: $min-height;\n\n  $max-icon-height: icon-size(md);\n\n  @if map_has_key($size-settings, icon-only) {\n    $max-icon-height: icon-size(map_get($size-settings, icon-only));\n  }\n  @else if map_has_key($size-settings, icon) {\n    $max-icon-height: icon-size(map_get($size-settings, icon));\n  }\n\n  $space-y: max($line-height, $max-icon-height);\n  $padding-x: space(map_get($size-settings, padding-x));\n\n  padding: #{($min-height - $space-y) / 2} #{$padding-x};\n\n  @if $border-radius {\n    border-radius: #{$min-height / 2};\n  }\n}\n\n@function _link-icon-margin($size) {\n  @return icon-size($size) / 4;\n}\n\n@mixin _link-align-on-content($size, $place, $size-settings) {\n  $padding-x: space(map_get($size-settings, padding-x));\n  $icon-margin: _link-icon-margin(map_get($size-settings, icon));\n\n  @if $place == null {\n    margin-left: -($padding-x);\n    margin-right: -($padding-x);\n  }\n  @else if $place == left {\n    margin-left: -($padding-x - $icon-margin);\n    margin-right: -($padding-x);\n  }\n  @else if $place == right {\n    margin-left: -($padding-x);\n    margin-right: -($padding-x - $icon-margin);\n  }\n  @else if $place == only {\n    $icon-size: icon-size(map_get($size-settings, icon-only));\n    $min-height: space(map_get($size-settings, min-height));\n    $padding-x: ($min-height - $icon-size) / 2;\n\n    margin-left: -($padding-x);\n    margin-right: -($padding-x);\n  }\n}\n","////\n/// Core Function : units\n/// @group core\n////\n\n/// Retourne la valeur numérique sans unité.\n/// @access public\n/// @param {String} $value - la valeur avec unité\n/// @example\n///   clean-unit(12px);\n@function clean-unit($value) {\n  @if $value == null {\n    @return null;\n  }\n  @return ($value / ($value * 0 + 1));\n}\n\n/// Return rem from px\n///\n/// @param {String} $px - Font size in pixels\n/// @param {String} $root-font-size [$base-font-size-px] - Pixel font size for conversion\n///\n/// @example scss - Get 1rem conversion from 16px, using $base-font-size-px\n///   .foo {\n///     font-size: px-rem(12px);\n///   }\n@function px-rem($px, $root-font-size: 16px) {\n  @return clean-unit($px / $root-font-size) * 1rem;\n}\n\n@function is-unit($value, $unit) {\n  $v: to-lower-case(quote($value));\n  $u: quote($unit);\n  @return str-index($v, $u) == (str-length($v) - str-length($u) + 1);\n}\n\n@function is-basic-unit($value) {\n  $units: em ex '%' px cm mm in pt pc ch rem vw vh vmin vmax;\n  @each $unit in $units {\n    @if is-unit($value, $unit) {\n      @return true;\n    }\n  }\n  @return false;\n}\n","////\n/// Link Tool : icons\n/// @group link\n////\n\n@mixin _build-link-icon($size-settings, $place, $size:md, $font-icon: false, $reverse: false) {\n\n  $icon-size: icon-size(map_get($size-settings, icon));\n\n  @if $place == only {\n    $icon-size: icon-size(map_get($size-settings, icon-only));\n  }\n\n  @if $reverse {\n    flex-direction: row-reverse;\n  }\n  @else {\n    flex-direction: row;\n  }\n\n  $icon-margin: _link-icon-margin(map_get($size-settings, icon));\n  $icon-margin-x: space(map_get($size-settings, icon-margin-x));\n\n  @if $place == left {\n    overflow: initial;\n    max-width: none;\n    max-height: none;\n    @include before {\n      margin-left: -($icon-margin);\n      margin-right: $icon-margin-x;\n      font-size: $icon-size;\n    }\n  }\n  @else if $place == right {\n    overflow: initial;\n    max-width: none;\n    max-height: none;\n    @include before {\n      margin-right: -($icon-margin);\n      margin-left: $icon-margin-x;\n      font-size: $icon-size;\n    }\n  }\n  @else if $place == only {\n    $min-height: space(map_get($size-settings, min-height));\n    $padding-x: ($min-height - $icon-size) / 2;\n\n    overflow: hidden;\n    white-space: nowrap;\n    max-width: $min-height;\n    max-height: $min-height;\n    padding-left: $padding-x;\n    padding-right: $padding-x;\n\n    @include before {\n      margin-left: 0;\n      margin-right: $padding-x;\n      font-size: $icon-size;\n    }\n  }\n}\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","////\n/// Core Tool : Icon\n/// @group core\n////\n\n/// Return icon size from map\n/// @param {String} $size [\"md\"] - Icon size from `$icon-size-map` (Default to \"md\" = 16px)\n///\n/// @example scss - Set icon size to `SM` (12px)\n///   .foo {\n///     width: icon-size(sm);\n///     height: icon-size(sm);\n///   }\n@function icon-size($size: md) {\n  @return px-rem(map-get($icon-size-map, $size));\n}\n\n@mixin icon-size($size:md) {\n  font-size: #{icon-size($size)} !important;\n}\n\n@mixin with-icon($size:md) {\n  @include has-icon {\n    @include before {\n      @if $size != md {\n        @include icon-size($size);\n      }\n      @content;\n    }\n  }\n}\n\n@mixin generate-icons($base) {\n  @each $icon, $settings in $icons-settings {\n    #{ns($base + '-' + $icon)} {\n      @include before(icon-glyph($icon));\n    }\n  }\n}\n\n@function icon-glyph($icon, $is-ligature: false) {\n  $icon-settings: map-get($icons-settings, $icon);\n  @if $is-ligature {\n    @return \"#{map-get($icon-settings, ligature)}\";\n  }\n  @else {\n    @return \"#{map-get($icon-settings, codepoint)}\";\n  }\n}\n\n@mixin icon-content($icon) {\n  content: icon-glyph($icon);\n}\n\n@function font-icon($size: md) {\n  @return normal normal normal #{icon-size($size)}/1 #{$namespace}-icon;\n}\n\n@mixin font-icon($size: md) {\n  font: font-icon($size);\n}\n\n@mixin icon($icon:null, $size:md, $pseudo:before) {\n  @include _pseudo($pseudo) {\n    @if $size != null {\n      @include font-icon($size);\n    }\n\n    @if $icon != null {\n      @include icon-content($icon);\n    }\n\n    @content;\n  }\n}\n","////\n/// Core Tool : Reset list\n/// @group core\n////\n\n@mixin enable-list-style() {\n  $selector: null;\n\n  @if & == null {\n    $selector: ':root';\n  }\n\n  @include nest($selector) {\n    --ul-type: \"●\\00a0\\00a0\";\n    --ol-type: decimal;\n    --ul-start: #{space(4v)};\n    --ol-start: #{space(6v)};\n    --xl-block: #{space(2v)};\n    --li-bottom: #{space(1v)};\n    --xl-base: 1em;\n    --ol-content: counters(li-counter, \".\") \".\\00a0\\00a0\";\n  }\n}\n\n@mixin disable-list-style() {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n}\n","////\n/// Follow Scheme\n/// @group follow\n////\n\n@mixin _follow-scheme($legacy: false) {\n  #{ns(follow)} {\n    @include scheme-element-bg-color(alt blue-france, $legacy);\n\n    #{ns(input)} {\n      @include scheme-element-bg-color(default neutral, $legacy);\n    }\n\n    &__title {\n      @include scheme-element-text-color(title neutral, $legacy);\n    }\n\n    &__newsletter {\n      &-legal {\n        @include scheme-element-text-color(mention neutral, $legacy);\n      }\n    }\n\n    #{ns(grid-row)} > *:not(:first-child) {\n      // Séparateur en box-shadow\n      @include scheme-element-box-shadow-color(default blue-france, $legacy, false, top-1-out);\n      @include respond-from(md) {\n        @include scheme-element-box-shadow-color(default blue-france, $legacy, false, left-1-out);\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Selector Breakpoint\n/// @group core\n////\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `[\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `[\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-to(md) {\n///     }\n///   }\n@mixin respond-to($media) {\n\n  @debug 'afin de rester mobile first, n‘utiliser la mixin respond-to uniquement s‘il n‘y a pas d‘autre alternative, lui préférer systématiquement la mixin respond-from';\n\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null and length($limits) == 2 {\n    @media (max-width: nth($limits, 2)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","////\n/// Legacy Tool : legacy\n/// @group legacy\n////\n\n/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin legacy($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin not-legacy($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n"]}