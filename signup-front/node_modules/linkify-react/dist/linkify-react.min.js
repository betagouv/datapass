var Linkify=function(e,r){"use strict";function t(e){if(e&&e.__esModule)return e;var r=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,n.get?n:{enumerable:!0,get:function(){return e[t]}})}})),r.default=e,Object.freeze(r)}var n=t(e);function i(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,r){if(!e)return;if("string"==typeof e)return a(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return a(e,r)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function o(e,t){for(var i=r.tokenize(e),a=[],o=0,l=0;l<i.length;l++){var f=i[l];if("nl"===f.t&&t.nl2br)a.push(n.createElement("br",{key:"linkified-".concat(++o)}));else if(f.isLink&&t.check(f)){var c=t.resolve(f),u=c.formatted,s=c.formattedHref,p=c.tagName,y=c.className,m=c.target,d=c.rel,h=c.attributes,g={key:"linkified-".concat(++o),href:s};if(y&&(g.className=y),m&&(g.target=m),d&&(g.rel=d),h)for(var v in h)g[v]=h[v];a.push(n.createElement(p,g,u))}else a.push(f.toString())}return a}function l(e,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(0===n.Children.count(e.props.children))return e;var a=[];n.Children.forEach(e.props.children,(function(e){"string"==typeof e?(t+=1,a.push.apply(a,i(o(e,r)))):n.isValidElement(e)?"string"==typeof e.type&&r.ignoreTags.indexOf(e.type.toUpperCase())>=0?a.push(e):a.push(l(e,r,++t)):a.push(e)}));var f={key:"linkified-element-".concat(t)};for(var c in e.props)f[c]=e.props[c];return n.cloneElement(e,f,a)}return function(e){var t={key:"linkified-element-wrapper"};for(var i in e)"options"!==i&&"tagName"!==i&&"children"!==i&&(t[i]=e[i]);var a=new r.Options(e.options),o=e.tagName||n.Fragment||"span",f=e.children;return l(n.createElement(o,t,f),a,0)}}(React,linkify);
