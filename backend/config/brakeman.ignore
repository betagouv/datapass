{
  "ignored_warnings": [
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "18182410f0efb02c682ebefc82020767f7aa20ec0a4ed030c9732f6e6b5ded45",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/controllers/stats_controller.rb",
      "line": 108,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.exec_query(\"      SELECT target_api AS name, COUNT(target_api)\\n      FROM enrollments\\n      WHERE #{(\"target_api = any('{#{([] or JSON.parse(params[:target_api_list])).join(\", \")}}')\" or \"1 = 1\")}\\n      GROUP BY target_api\\n      ORDER BY COUNT(target_api) desc;\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "StatsController",
        "method": "show"
      },
      "user_input": "params[:target_api_list]",
      "confidence": "High",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "22ffb7db50c85ade8c4f631660d3f3c57939b200e5a7d10611b044e9e5c2d1ed",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/services/get_average_processing_time_in_days.rb",
      "line": 38,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.execute(\"      WITH selected_enrollments as (\\n        SELECT id\\n        FROM enrollments\\n        WHERE status IN ('validated', 'refused')\\n          AND updated_at > CURRENT_DATE - INTERVAL '6 months'\\n          AND #{filter_by_target_api_criteria}\\n      )\\n      SELECT TO_CHAR(\\n        AVG (validation_duration),\\n        'FM999999999'\\n      )\\n      FROM (\\n        SELECT enrollment_id,\\n          DATE_PART(\\n            'days',\\n            MIN(created_at) FILTER (WHERE name IN ('archive', 'request_changes', 'validate', 'refuse')) -\\n            MIN(created_at) FILTER (WHERE name IN ('submit'))\\n          ) AS validation_duration\\n        FROM events\\n          INNER JOIN\\n            selected_enrollments ON enrollment_id = selected_enrollments.id\\n        GROUP BY enrollment_id\\n      ) e;\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GetAverageProcessingTimeInDays",
        "method": "call"
      },
      "user_input": "filter_by_target_api_criteria",
      "confidence": "Medium",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "284a45cb0fd6d69ca85ca9f181153eca233008257789f828b70bbc3d0b65e5c4",
      "check_name": "SendFile",
      "message": "Model attribute used in file name",
      "file": "app/controllers/documents_controller.rb",
      "line": 7,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "send_file(authorize(Document.find(params[:id]), :policy_class => (DocumentPolicy)).attachment.current_path)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "DocumentsController",
        "method": "show"
      },
      "user_input": "Document.find(params[:id])",
      "confidence": "Weak",
      "cwe_id": [
        22
      ],
      "note": ""
    },
    {
      "warning_type": "Remote Code Execution",
      "warning_code": 24,
      "fingerprint": "529871f7adad19ff9ef759de82f4a03754f221a3f42c69216d1e1f6429c46241",
      "check_name": "UnsafeReflection",
      "message": "Unsafe reflection method `constantize` called on parameter value",
      "file": "app/controllers/enrollments_controller.rb",
      "line": 99,
      "link": "https://brakemanscanner.org/docs/warning_types/remote_code_execution/",
      "code": "\"Enrollment::#{params.fetch(:enrollment, {})[\"target_api\"].underscore.classify}\".constantize",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "EnrollmentsController",
        "method": "create"
      },
      "user_input": "params.fetch(:enrollment, {})[\"target_api\"].underscore.classify",
      "confidence": "High",
      "cwe_id": [
        470
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "5a332857b254bf93225c46ef484cae328645fff3892428f420d25b340b3128e9",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/controllers/stats_controller.rb",
      "line": 47,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.execute(\"      SELECT COUNT(*) FROM enrollments WHERE status = 'validated' AND #{(\"target_api = any('{#{([] or JSON.parse(params[:target_api_list])).join(\", \")}}')\" or \"1 = 1\")};\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "StatsController",
        "method": "show"
      },
      "user_input": "params[:target_api_list]",
      "confidence": "High",
      "cwe_id": [
        89
      ],
      "note": "prevent the case in code"
    },
    {
      "warning_type": "Dangerous Send",
      "warning_code": 23,
      "fingerprint": "70509f1b16d5d768dc52dc23e7a56a49216620479f5da5f0a29f1eb388281fb6",
      "check_name": "Send",
      "message": "User controlled method execution",
      "file": "app/controllers/enrollments_controller.rb",
      "line": 168,
      "link": "https://brakemanscanner.org/docs/warning_types/dangerous_send/",
      "code": "authorize(Enrollment.find(params[:id]), \"#{params[:event]}?\".to_sym).send(\"#{params[:event]}_status\".to_sym, :user_id => current_user.id, :comment => params[:comment])",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "EnrollmentsController",
        "method": "change_state"
      },
      "user_input": "params[:event]",
      "confidence": "High",
      "cwe_id": [
        77
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "753543f681c665d8086cb559f9d4fd94d62aa12ad18c24214b5dda657b114f18",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/controllers/stats_controller.rb",
      "line": 71,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.execute(\"      SELECT round((COUNT(go_back_count)*100)::numeric/NULLIF(COUNT(*), 0), 0) as go_back_ratio\\n      FROM (\\n        SELECT\\n          enrollments.id, NULLIF(COUNT(enrollments.id) - 1, 0) as go_back_count\\n        FROM enrollments\\n          LEFT JOIN\\n          events ON events.enrollment_id = enrollments.id\\n          AND events.name IN ('create', 'request_changes')\\n        WHERE enrollments.status IN ('validated', 'refused')\\n        AND #{(\"target_api = any('{#{([] or JSON.parse(params[:target_api_list])).join(\", \")}}')\" or \"1 = 1\")}\\n        AND enrollments.updated_at > CURRENT_DATE - INTERVAL '6 months'\\n        GROUP BY enrollments.id\\n      ) e;\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "StatsController",
        "method": "show"
      },
      "user_input": "params[:target_api_list]",
      "confidence": "High",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "8592b6a3a71a436db6b921a352a9f0faad7e4e498a2fd81a5944211c6ae2338a",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/mailers/webhook_mailer.rb",
      "line": 24,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "User.where(\"'#{params[:target_api]}:instructor' = ANY(roles)\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "WebhookMailer",
        "method": "target_api_instructor_emails"
      },
      "user_input": "params[:target_api]",
      "confidence": "High",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "Unmaintained Dependency",
      "warning_code": 123,
      "fingerprint": "870fa4a5cfd770898e1b7a159368b4210fe366634512563f9fb1c1cbbfef1d78",
      "check_name": "EOLRuby",
      "message": "Support for Ruby 2.7.6 ends on 2023-03-31",
      "file": "Gemfile.lock",
      "line": 264,
      "link": "https://brakemanscanner.org/docs/warning_types/unmaintained_dependency/",
      "code": null,
      "render_path": null,
      "location": null,
      "user_input": null,
      "confidence": "Medium",
      "cwe_id": [
        1104
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "cad8d175655c70a92179f71fe967b3ca59b1be6814616afcd4c78bc975e9c011",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/controllers/stats_controller.rb",
      "line": 95,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.exec_query(\"      SELECT\\n        date_trunc('month', created_at) AS month,\\n        COUNT(*) filter (where status = 'draft') as draft,\\n        COUNT(*) filter (where status = 'changes_requested') as changes_requested,\\n        COUNT(*) filter (where status = 'submitted') as submitted,\\n        COUNT(*) filter (where status = 'validated') as validated,\\n        COUNT(*) filter (where status = 'refused') as refused,\\n        COUNT(*) filter (where status = 'revoked') as revoked,\\n        COUNT(*) filter (where status = 'archived') as archived,\\n        COUNT(*) as total\\n      FROM enrollments\\n      WHERE #{(\"target_api = any('{#{([] or JSON.parse(params[:target_api_list])).join(\", \")}}')\" or \"1 = 1\")}\\n      AND created_at > '2020-01-01 00:00:00'\\n      GROUP BY month\\n      ORDER BY month;\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "StatsController",
        "method": "show"
      },
      "user_input": "params[:target_api_list]",
      "confidence": "High",
      "cwe_id": [
        89
      ],
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "cfff5d2684319f2825572c77b6128f92d2e8595105eda9da249ea3e342df856f",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/controllers/stats_controller.rb",
      "line": 38,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.execute(\"      SELECT COUNT(*) FROM enrollments WHERE #{(\"target_api = any('{#{([] or JSON.parse(params[:target_api_list])).join(\", \")}}')\" or \"1 = 1\")};\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "StatsController",
        "method": "show"
      },
      "user_input": "params[:target_api_list]",
      "confidence": "High",
      "cwe_id": [
        89
      ],
      "note": "prevent in backend code"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "f4fb3010f00cf57691053a8ec2c2a86eafc0bc222788df98ea4c57d0bc28749f",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/controllers/stats_controller.rb",
      "line": 120,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.exec_query(\"      SELECT status AS name, count(status)\\n      FROM enrollments\\n      WHERE #{(\"target_api = any('{#{([] or JSON.parse(params[:target_api_list])).join(\", \")}}')\" or \"1 = 1\")}\\n      GROUP BY status;\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "StatsController",
        "method": "show"
      },
      "user_input": "params[:target_api_list]",
      "confidence": "High",
      "cwe_id": [
        89
      ],
      "note": ""
    }
  ],
  "updated": "2023-03-03 10:12:11 +0100",
  "brakeman_version": "5.4.0"
}
